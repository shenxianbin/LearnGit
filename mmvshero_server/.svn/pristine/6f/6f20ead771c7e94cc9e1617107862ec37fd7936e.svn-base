// Code generated by protoc-gen-go.
// source: fight_report_cache.proto
// DO NOT EDIT!

package cache

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type FightReportCache struct {
	Uid              *int64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	Report           []byte `protobuf:"bytes,2,req,name=report" json:"report,omitempty"`
	TimeStamp        *int64 `protobuf:"varint,3,req,name=time_stamp" json:"time_stamp,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FightReportCache) Reset()         { *m = FightReportCache{} }
func (m *FightReportCache) String() string { return proto.CompactTextString(m) }
func (*FightReportCache) ProtoMessage()    {}

func (m *FightReportCache) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *FightReportCache) GetReport() []byte {
	if m != nil {
		return m.Report
	}
	return nil
}

func (m *FightReportCache) GetTimeStamp() int64 {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return 0
}

func (m *FightReportCache) SetUid(value int64) {
	if m != nil {
		if m.Uid != nil {
			*m.Uid = value
			return
		}
		m.Uid = proto.Int64(value)
	}
}

func (m *FightReportCache) SetReport(value []byte) {
	if m != nil {
		if m.Report != nil {
			m.Report = value
			return
		}
		m.Report = value
	}
}

func (m *FightReportCache) SetTimeStamp(value int64) {
	if m != nil {
		if m.TimeStamp != nil {
			*m.TimeStamp = value
			return
		}
		m.TimeStamp = proto.Int64(value)
	}
}

func init() {
}
