// Code generated by protoc-gen-go.
// source: gmcommand.proto
// DO NOT EDIT!

/*
	Package gm is a generated protocol buffer package.

	It is generated from these files:
		gmcommand.proto

	It has these top-level messages:
		MsgGmCommandNotify
*/
package gm

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

// 模块枚举
type CommandModule int32

const (
	CommandModule_Role     CommandModule = 0
	CommandModule_Item     CommandModule = 1
	CommandModule_Hero     CommandModule = 2
	CommandModule_Soldier  CommandModule = 3
	CommandModule_Building CommandModule = 4
)

var CommandModule_name = map[int32]string{
	0: "Role",
	1: "Item",
	2: "Hero",
	3: "Soldier",
	4: "Building",
}
var CommandModule_value = map[string]int32{
	"Role":     0,
	"Item":     1,
	"Hero":     2,
	"Soldier":  3,
	"Building": 4,
}

func (x CommandModule) Enum() *CommandModule {
	p := new(CommandModule)
	*p = x
	return p
}
func (x CommandModule) String() string {
	return proto.EnumName(CommandModule_name, int32(x))
}
func (x *CommandModule) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommandModule_value, data, "CommandModule")
	if err != nil {
		return err
	}
	*x = CommandModule(value)
	return nil
}

// 订单性质
type CommandProperty int32

const (
	CommandProperty_New CommandProperty = 0
	CommandProperty_Fix CommandProperty = 1
)

var CommandProperty_name = map[int32]string{
	0: "New",
	1: "Fix",
}
var CommandProperty_value = map[string]int32{
	"New": 0,
	"Fix": 1,
}

func (x CommandProperty) Enum() *CommandProperty {
	p := new(CommandProperty)
	*p = x
	return p
}
func (x CommandProperty) String() string {
	return proto.EnumName(CommandProperty_name, int32(x))
}
func (x *CommandProperty) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommandProperty_value, data, "CommandProperty")
	if err != nil {
		return err
	}
	*x = CommandProperty(value)
	return nil
}

// 属性选项
type CommandOption int32

const (
	CommandOption_Lv         CommandOption = 0
	CommandOption_Exp        CommandOption = 1
	CommandOption_Order      CommandOption = 2
	CommandOption_Soul       CommandOption = 3
	CommandOption_ArenaPoint CommandOption = 4
	CommandOption_Gold       CommandOption = 5
	CommandOption_FreeGold   CommandOption = 6
	CommandOption_SkillLv    CommandOption = 7
	CommandOption_Num        CommandOption = 8
	CommandOption_Stage      CommandOption = 9
	CommandOption_Rank       CommandOption = 10
)

var CommandOption_name = map[int32]string{
	0:  "Lv",
	1:  "Exp",
	2:  "Order",
	3:  "Soul",
	4:  "ArenaPoint",
	5:  "Gold",
	6:  "FreeGold",
	7:  "SkillLv",
	8:  "Num",
	9:  "Stage",
	10: "Rank",
}
var CommandOption_value = map[string]int32{
	"Lv":         0,
	"Exp":        1,
	"Order":      2,
	"Soul":       3,
	"ArenaPoint": 4,
	"Gold":       5,
	"FreeGold":   6,
	"SkillLv":    7,
	"Num":        8,
	"Stage":      9,
	"Rank":       10,
}

func (x CommandOption) Enum() *CommandOption {
	p := new(CommandOption)
	*p = x
	return p
}
func (x CommandOption) String() string {
	return proto.EnumName(CommandOption_name, int32(x))
}
func (x *CommandOption) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommandOption_value, data, "CommandOption")
	if err != nil {
		return err
	}
	*x = CommandOption(value)
	return nil
}

// 数值运算
type CommandOperation int32

const (
	CommandOperation_Edit CommandOperation = 0
	CommandOperation_Add  CommandOperation = 1
)

var CommandOperation_name = map[int32]string{
	0: "Edit",
	1: "Add",
}
var CommandOperation_value = map[string]int32{
	"Edit": 0,
	"Add":  1,
}

func (x CommandOperation) Enum() *CommandOperation {
	p := new(CommandOperation)
	*p = x
	return p
}
func (x CommandOperation) String() string {
	return proto.EnumName(CommandOperation_name, int32(x))
}
func (x *CommandOperation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommandOperation_value, data, "CommandOperation")
	if err != nil {
		return err
	}
	*x = CommandOperation(value)
	return nil
}

// 订单状态
type OrderStatus int32

const (
	OrderStatus_NoProcess OrderStatus = 0
	OrderStatus_Success   OrderStatus = 1
	OrderStatus_Fail      OrderStatus = 2
)

var OrderStatus_name = map[int32]string{
	0: "NoProcess",
	1: "Success",
	2: "Fail",
}
var OrderStatus_value = map[string]int32{
	"NoProcess": 0,
	"Success":   1,
	"Fail":      2,
}

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}
func (x OrderStatus) String() string {
	return proto.EnumName(OrderStatus_name, int32(x))
}
func (x *OrderStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(OrderStatus_value, data, "OrderStatus")
	if err != nil {
		return err
	}
	*x = OrderStatus(value)
	return nil
}

type GmMsgCode int32

const (
	GmMsgCode_GmCommandNotify GmMsgCode = 1
)

var GmMsgCode_name = map[int32]string{
	1: "GmCommandNotify",
}
var GmMsgCode_value = map[string]int32{
	"GmCommandNotify": 1,
}

func (x GmMsgCode) Enum() *GmMsgCode {
	p := new(GmMsgCode)
	*p = x
	return p
}
func (x GmMsgCode) String() string {
	return proto.EnumName(GmMsgCode_name, int32(x))
}
func (x *GmMsgCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GmMsgCode_value, data, "GmMsgCode")
	if err != nil {
		return err
	}
	*x = GmMsgCode(value)
	return nil
}

type MsgGmCommandNotify struct {
	Uid              *int64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgGmCommandNotify) Reset()         { *m = MsgGmCommandNotify{} }
func (m *MsgGmCommandNotify) String() string { return proto.CompactTextString(m) }
func (*MsgGmCommandNotify) ProtoMessage()    {}

func (m *MsgGmCommandNotify) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *MsgGmCommandNotify) SetUid(value int64) {
	if m != nil {
		if m.Uid != nil {
			*m.Uid = value
			return
		}
		m.Uid = proto.Int64(value)
	}
}

func init() {
	proto.RegisterEnum("gm.CommandModule", CommandModule_name, CommandModule_value)
	proto.RegisterEnum("gm.CommandProperty", CommandProperty_name, CommandProperty_value)
	proto.RegisterEnum("gm.CommandOption", CommandOption_name, CommandOption_value)
	proto.RegisterEnum("gm.CommandOperation", CommandOperation_name, CommandOperation_value)
	proto.RegisterEnum("gm.OrderStatus", OrderStatus_name, OrderStatus_value)
	proto.RegisterEnum("gm.GmMsgCode", GmMsgCode_name, GmMsgCode_value)
}
