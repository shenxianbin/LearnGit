// Code generated by protoc-gen-go.
// source: stage_cache.proto
// DO NOT EDIT!

package cache

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type StageCache struct {
	SchemeId          *int32          `protobuf:"varint,1,req,name=schemeId" json:"schemeId,omitempty"`
	IsBeginning       *bool           `protobuf:"varint,2,req,name=isBeginning" json:"isBeginning,omitempty"`
	IsPassed          *bool           `protobuf:"varint,3,req,name=isPassed" json:"isPassed,omitempty"`
	IsPlayedAnimation *bool           `protobuf:"varint,4,req,name=isPlayedAnimation" json:"isPlayedAnimation,omitempty"`
	Stars             map[int32]int32 `protobuf:"bytes,5,rep,name=stars" json:"stars,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	XXX_unrecognized  []byte          `json:"-"`
}

func (m *StageCache) Reset()         { *m = StageCache{} }
func (m *StageCache) String() string { return proto.CompactTextString(m) }
func (*StageCache) ProtoMessage()    {}

func (m *StageCache) GetSchemeId() int32 {
	if m != nil && m.SchemeId != nil {
		return *m.SchemeId
	}
	return 0
}

func (m *StageCache) GetIsBeginning() bool {
	if m != nil && m.IsBeginning != nil {
		return *m.IsBeginning
	}
	return false
}

func (m *StageCache) GetIsPassed() bool {
	if m != nil && m.IsPassed != nil {
		return *m.IsPassed
	}
	return false
}

func (m *StageCache) GetIsPlayedAnimation() bool {
	if m != nil && m.IsPlayedAnimation != nil {
		return *m.IsPlayedAnimation
	}
	return false
}

func (m *StageCache) GetStars() map[int32]int32 {
	if m != nil {
		return m.Stars
	}
	return nil
}

func (m *StageCache) SetSchemeId(value int32) {
	if m != nil {
		if m.SchemeId != nil {
			*m.SchemeId = value
			return
		}
		m.SchemeId = proto.Int32(value)
	}
}

func (m *StageCache) SetIsBeginning(value bool) {
	if m != nil {
		if m.IsBeginning != nil {
			*m.IsBeginning = value
			return
		}
		m.IsBeginning = proto.Bool(value)
	}
}

func (m *StageCache) SetIsPassed(value bool) {
	if m != nil {
		if m.IsPassed != nil {
			*m.IsPassed = value
			return
		}
		m.IsPassed = proto.Bool(value)
	}
}

func (m *StageCache) SetIsPlayedAnimation(value bool) {
	if m != nil {
		if m.IsPlayedAnimation != nil {
			*m.IsPlayedAnimation = value
			return
		}
		m.IsPlayedAnimation = proto.Bool(value)
	}
}

func (m *StageCache) SetStars(value map[int32]int32) {
	if m != nil {
		m.Stars = value
	}
}

func init() {
}
