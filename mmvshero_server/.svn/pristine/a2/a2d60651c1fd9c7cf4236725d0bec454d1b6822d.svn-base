// Code generated by protoc-gen-go.
// source: arena_cache.proto
// DO NOT EDIT!

package cache

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ArenaAward struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Code             *int32 `protobuf:"varint,2,req,name=code" json:"code,omitempty"`
	Amount           *int32 `protobuf:"varint,3,req,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaAward) Reset()         { *m = ArenaAward{} }
func (m *ArenaAward) String() string { return proto.CompactTextString(m) }
func (*ArenaAward) ProtoMessage()    {}

func (m *ArenaAward) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *ArenaAward) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ArenaAward) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *ArenaAward) SetType(value int32) {
	if m != nil {
		if m.Type != nil {
			*m.Type = value
			return
		}
		m.Type = proto.Int32(value)
	}
}

func (m *ArenaAward) SetCode(value int32) {
	if m != nil {
		if m.Code != nil {
			*m.Code = value
			return
		}
		m.Code = proto.Int32(value)
	}
}

func (m *ArenaAward) SetAmount(value int32) {
	if m != nil {
		if m.Amount != nil {
			*m.Amount = value
			return
		}
		m.Amount = proto.Int32(value)
	}
}

type ArenaCache struct {
	BossVersion      *int64          `protobuf:"varint,1,req,name=boss_version" json:"boss_version,omitempty"`
	Point            *int32          `protobuf:"varint,2,req,name=point" json:"point,omitempty"`
	BestScore        *int32          `protobuf:"varint,3,req,name=best_score" json:"best_score,omitempty"`
	ShopVersion      *int64          `protobuf:"varint,4,req,name=shop_version" json:"shop_version,omitempty"`
	ShopRecords      map[int32]int32 `protobuf:"bytes,5,rep,name=shop_records" json:"shop_records,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *ArenaCache) Reset()         { *m = ArenaCache{} }
func (m *ArenaCache) String() string { return proto.CompactTextString(m) }
func (*ArenaCache) ProtoMessage()    {}

func (m *ArenaCache) GetBossVersion() int64 {
	if m != nil && m.BossVersion != nil {
		return *m.BossVersion
	}
	return 0
}

func (m *ArenaCache) GetPoint() int32 {
	if m != nil && m.Point != nil {
		return *m.Point
	}
	return 0
}

func (m *ArenaCache) GetBestScore() int32 {
	if m != nil && m.BestScore != nil {
		return *m.BestScore
	}
	return 0
}

func (m *ArenaCache) GetShopVersion() int64 {
	if m != nil && m.ShopVersion != nil {
		return *m.ShopVersion
	}
	return 0
}

func (m *ArenaCache) GetShopRecords() map[int32]int32 {
	if m != nil {
		return m.ShopRecords
	}
	return nil
}

func (m *ArenaCache) SetBossVersion(value int64) {
	if m != nil {
		if m.BossVersion != nil {
			*m.BossVersion = value
			return
		}
		m.BossVersion = proto.Int64(value)
	}
}

func (m *ArenaCache) SetPoint(value int32) {
	if m != nil {
		if m.Point != nil {
			*m.Point = value
			return
		}
		m.Point = proto.Int32(value)
	}
}

func (m *ArenaCache) SetBestScore(value int32) {
	if m != nil {
		if m.BestScore != nil {
			*m.BestScore = value
			return
		}
		m.BestScore = proto.Int32(value)
	}
}

func (m *ArenaCache) SetShopVersion(value int64) {
	if m != nil {
		if m.ShopVersion != nil {
			*m.ShopVersion = value
			return
		}
		m.ShopVersion = proto.Int64(value)
	}
}

func (m *ArenaCache) SetShopRecords(value map[int32]int32) {
	if m != nil {
		m.ShopRecords = value
	}
}

type ArenaSystemCache struct {
	BossVersion      *int64        `protobuf:"varint,1,req,name=boss_version" json:"boss_version,omitempty"`
	BossId           *int32        `protobuf:"varint,2,req,name=boss_id" json:"boss_id,omitempty"`
	BossAward1       []*ArenaAward `protobuf:"bytes,3,rep,name=boss_award1" json:"boss_award1,omitempty"`
	BossAward2       []*ArenaAward `protobuf:"bytes,4,rep,name=boss_award2" json:"boss_award2,omitempty"`
	BossAward3       []*ArenaAward `protobuf:"bytes,5,rep,name=boss_award3" json:"boss_award3,omitempty"`
	ShopVersion      *int64        `protobuf:"varint,6,req,name=shop_version" json:"shop_version,omitempty"`
	ShopPanel        *int32        `protobuf:"varint,7,req,name=shop_panel" json:"shop_panel,omitempty"`
	ShopAward        []*ArenaAward `protobuf:"bytes,8,rep,name=shop_award" json:"shop_award,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ArenaSystemCache) Reset()         { *m = ArenaSystemCache{} }
func (m *ArenaSystemCache) String() string { return proto.CompactTextString(m) }
func (*ArenaSystemCache) ProtoMessage()    {}

func (m *ArenaSystemCache) GetBossVersion() int64 {
	if m != nil && m.BossVersion != nil {
		return *m.BossVersion
	}
	return 0
}

func (m *ArenaSystemCache) GetBossId() int32 {
	if m != nil && m.BossId != nil {
		return *m.BossId
	}
	return 0
}

func (m *ArenaSystemCache) GetBossAward1() []*ArenaAward {
	if m != nil {
		return m.BossAward1
	}
	return nil
}

func (m *ArenaSystemCache) GetBossAward2() []*ArenaAward {
	if m != nil {
		return m.BossAward2
	}
	return nil
}

func (m *ArenaSystemCache) GetBossAward3() []*ArenaAward {
	if m != nil {
		return m.BossAward3
	}
	return nil
}

func (m *ArenaSystemCache) GetShopVersion() int64 {
	if m != nil && m.ShopVersion != nil {
		return *m.ShopVersion
	}
	return 0
}

func (m *ArenaSystemCache) GetShopPanel() int32 {
	if m != nil && m.ShopPanel != nil {
		return *m.ShopPanel
	}
	return 0
}

func (m *ArenaSystemCache) GetShopAward() []*ArenaAward {
	if m != nil {
		return m.ShopAward
	}
	return nil
}

func (m *ArenaSystemCache) SetBossVersion(value int64) {
	if m != nil {
		if m.BossVersion != nil {
			*m.BossVersion = value
			return
		}
		m.BossVersion = proto.Int64(value)
	}
}

func (m *ArenaSystemCache) SetBossId(value int32) {
	if m != nil {
		if m.BossId != nil {
			*m.BossId = value
			return
		}
		m.BossId = proto.Int32(value)
	}
}

func (m *ArenaSystemCache) SetBossAward1(value []*ArenaAward) {
	if m != nil {
		m.BossAward1 = value
	}
}

func (m *ArenaSystemCache) SetBossAward2(value []*ArenaAward) {
	if m != nil {
		m.BossAward2 = value
	}
}

func (m *ArenaSystemCache) SetBossAward3(value []*ArenaAward) {
	if m != nil {
		m.BossAward3 = value
	}
}

func (m *ArenaSystemCache) SetShopVersion(value int64) {
	if m != nil {
		if m.ShopVersion != nil {
			*m.ShopVersion = value
			return
		}
		m.ShopVersion = proto.Int64(value)
	}
}

func (m *ArenaSystemCache) SetShopPanel(value int32) {
	if m != nil {
		if m.ShopPanel != nil {
			*m.ShopPanel = value
			return
		}
		m.ShopPanel = proto.Int32(value)
	}
}

func (m *ArenaSystemCache) SetShopAward(value []*ArenaAward) {
	if m != nil {
		m.ShopAward = value
	}
}

func init() {
}
