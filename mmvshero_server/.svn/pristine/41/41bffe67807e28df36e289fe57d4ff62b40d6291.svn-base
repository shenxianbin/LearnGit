// Code generated by protoc-gen-go.
// source: role_cache.proto
// DO NOT EDIT!

package cache

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type KingSkill struct {
	SkillId          *int32 `protobuf:"varint,1,req,name=skill_id" json:"skill_id,omitempty"`
	Lv               *int32 `protobuf:"varint,2,req,name=lv" json:"lv,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *KingSkill) Reset()         { *m = KingSkill{} }
func (m *KingSkill) String() string { return proto.CompactTextString(m) }
func (*KingSkill) ProtoMessage()    {}

func (m *KingSkill) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *KingSkill) GetLv() int32 {
	if m != nil && m.Lv != nil {
		return *m.Lv
	}
	return 0
}

func (m *KingSkill) SetSkillId(value int32) {
	if m != nil {
		if m.SkillId != nil {
			*m.SkillId = value
			return
		}
		m.SkillId = proto.Int32(value)
	}
}

func (m *KingSkill) SetLv(value int32) {
	if m != nil {
		if m.Lv != nil {
			*m.Lv = value
			return
		}
		m.Lv = proto.Int32(value)
	}
}

type RoleCache struct {
	Uid                  *int64               `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	Nickname             *string              `protobuf:"bytes,2,req,name=nickname" json:"nickname,omitempty"`
	Lv                   *int32               `protobuf:"varint,3,req,name=lv" json:"lv,omitempty"`
	Exp                  *int32               `protobuf:"varint,4,req,name=exp" json:"exp,omitempty"`
	Order                *int32               `protobuf:"varint,5,req,name=order" json:"order,omitempty"`
	OrderTimestamp       *int64               `protobuf:"varint,6,req,name=order_timestamp" json:"order_timestamp,omitempty"`
	Soul                 *int64               `protobuf:"varint,7,req,name=soul" json:"soul,omitempty"`
	Gold                 *int32               `protobuf:"varint,8,req,name=gold" json:"gold,omitempty"`
	FreeGold             *int32               `protobuf:"varint,9,req,name=free_gold" json:"free_gold,omitempty"`
	KingSkills           map[int32]*KingSkill `protobuf:"bytes,10,rep,name=king_skills" json:"king_skills,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Vip                  *int64               `protobuf:"varint,11,req,name=vip" json:"vip,omitempty"`
	ChatFreeTime         *int32               `protobuf:"varint,12,req,name=chat_free_time" json:"chat_free_time,omitempty"`
	ChatRefreshTimestamp *int64               `protobuf:"varint,13,req,name=chat_refresh_timestamp" json:"chat_refresh_timestamp,omitempty"`
	NewPlayerGuideStep   *int32               `protobuf:"varint,14,req,name=new_player_guide_step" json:"new_player_guide_step,omitempty"`
	LoginTime            *int64               `protobuf:"varint,15,req,name=loginTime" json:"loginTime,omitempty"`
	GuidePlunderAward    *bool                `protobuf:"varint,16,opt,name=guide_plunder_award" json:"guide_plunder_award,omitempty"`
	XXX_unrecognized     []byte               `json:"-"`
}

func (m *RoleCache) Reset()         { *m = RoleCache{} }
func (m *RoleCache) String() string { return proto.CompactTextString(m) }
func (*RoleCache) ProtoMessage()    {}

func (m *RoleCache) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *RoleCache) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *RoleCache) GetLv() int32 {
	if m != nil && m.Lv != nil {
		return *m.Lv
	}
	return 0
}

func (m *RoleCache) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *RoleCache) GetOrder() int32 {
	if m != nil && m.Order != nil {
		return *m.Order
	}
	return 0
}

func (m *RoleCache) GetOrderTimestamp() int64 {
	if m != nil && m.OrderTimestamp != nil {
		return *m.OrderTimestamp
	}
	return 0
}

func (m *RoleCache) GetSoul() int64 {
	if m != nil && m.Soul != nil {
		return *m.Soul
	}
	return 0
}

func (m *RoleCache) GetGold() int32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *RoleCache) GetFreeGold() int32 {
	if m != nil && m.FreeGold != nil {
		return *m.FreeGold
	}
	return 0
}

func (m *RoleCache) GetKingSkills() map[int32]*KingSkill {
	if m != nil {
		return m.KingSkills
	}
	return nil
}

func (m *RoleCache) GetVip() int64 {
	if m != nil && m.Vip != nil {
		return *m.Vip
	}
	return 0
}

func (m *RoleCache) GetChatFreeTime() int32 {
	if m != nil && m.ChatFreeTime != nil {
		return *m.ChatFreeTime
	}
	return 0
}

func (m *RoleCache) GetChatRefreshTimestamp() int64 {
	if m != nil && m.ChatRefreshTimestamp != nil {
		return *m.ChatRefreshTimestamp
	}
	return 0
}

func (m *RoleCache) GetNewPlayerGuideStep() int32 {
	if m != nil && m.NewPlayerGuideStep != nil {
		return *m.NewPlayerGuideStep
	}
	return 0
}

func (m *RoleCache) GetLoginTime() int64 {
	if m != nil && m.LoginTime != nil {
		return *m.LoginTime
	}
	return 0
}

func (m *RoleCache) GetGuidePlunderAward() bool {
	if m != nil && m.GuidePlunderAward != nil {
		return *m.GuidePlunderAward
	}
	return false
}

func (m *RoleCache) SetUid(value int64) {
	if m != nil {
		if m.Uid != nil {
			*m.Uid = value
			return
		}
		m.Uid = proto.Int64(value)
	}
}

func (m *RoleCache) SetNickname(value string) {
	if m != nil {
		if m.Nickname != nil {
			*m.Nickname = value
			return
		}
		m.Nickname = proto.String(value)
	}
}

func (m *RoleCache) SetLv(value int32) {
	if m != nil {
		if m.Lv != nil {
			*m.Lv = value
			return
		}
		m.Lv = proto.Int32(value)
	}
}

func (m *RoleCache) SetExp(value int32) {
	if m != nil {
		if m.Exp != nil {
			*m.Exp = value
			return
		}
		m.Exp = proto.Int32(value)
	}
}

func (m *RoleCache) SetOrder(value int32) {
	if m != nil {
		if m.Order != nil {
			*m.Order = value
			return
		}
		m.Order = proto.Int32(value)
	}
}

func (m *RoleCache) SetOrderTimestamp(value int64) {
	if m != nil {
		if m.OrderTimestamp != nil {
			*m.OrderTimestamp = value
			return
		}
		m.OrderTimestamp = proto.Int64(value)
	}
}

func (m *RoleCache) SetSoul(value int64) {
	if m != nil {
		if m.Soul != nil {
			*m.Soul = value
			return
		}
		m.Soul = proto.Int64(value)
	}
}

func (m *RoleCache) SetGold(value int32) {
	if m != nil {
		if m.Gold != nil {
			*m.Gold = value
			return
		}
		m.Gold = proto.Int32(value)
	}
}

func (m *RoleCache) SetFreeGold(value int32) {
	if m != nil {
		if m.FreeGold != nil {
			*m.FreeGold = value
			return
		}
		m.FreeGold = proto.Int32(value)
	}
}

func (m *RoleCache) SetKingSkills(value map[int32]*KingSkill) {
	if m != nil {
		m.KingSkills = value
	}
}

func (m *RoleCache) SetVip(value int64) {
	if m != nil {
		if m.Vip != nil {
			*m.Vip = value
			return
		}
		m.Vip = proto.Int64(value)
	}
}

func (m *RoleCache) SetChatFreeTime(value int32) {
	if m != nil {
		if m.ChatFreeTime != nil {
			*m.ChatFreeTime = value
			return
		}
		m.ChatFreeTime = proto.Int32(value)
	}
}

func (m *RoleCache) SetChatRefreshTimestamp(value int64) {
	if m != nil {
		if m.ChatRefreshTimestamp != nil {
			*m.ChatRefreshTimestamp = value
			return
		}
		m.ChatRefreshTimestamp = proto.Int64(value)
	}
}

func (m *RoleCache) SetNewPlayerGuideStep(value int32) {
	if m != nil {
		if m.NewPlayerGuideStep != nil {
			*m.NewPlayerGuideStep = value
			return
		}
		m.NewPlayerGuideStep = proto.Int32(value)
	}
}

func (m *RoleCache) SetLoginTime(value int64) {
	if m != nil {
		if m.LoginTime != nil {
			*m.LoginTime = value
			return
		}
		m.LoginTime = proto.Int64(value)
	}
}

func (m *RoleCache) SetGuidePlunderAward(value bool) {
	if m != nil {
		if m.GuidePlunderAward != nil {
			*m.GuidePlunderAward = value
			return
		}
		m.GuidePlunderAward = proto.Bool(value)
	}
}

type RoleStateCache struct {
	OnlineServer     *int32 `protobuf:"varint,1,req,name=online_server" json:"online_server,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RoleStateCache) Reset()         { *m = RoleStateCache{} }
func (m *RoleStateCache) String() string { return proto.CompactTextString(m) }
func (*RoleStateCache) ProtoMessage()    {}

func (m *RoleStateCache) GetOnlineServer() int32 {
	if m != nil && m.OnlineServer != nil {
		return *m.OnlineServer
	}
	return 0
}

func (m *RoleStateCache) SetOnlineServer(value int32) {
	if m != nil {
		if m.OnlineServer != nil {
			*m.OnlineServer = value
			return
		}
		m.OnlineServer = proto.Int32(value)
	}
}

func init() {
}
