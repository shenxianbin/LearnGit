// Code generated by protoc-gen-go.
// source: plunder_cache.proto
// DO NOT EDIT!

package cache

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type PlunderHeroSkillCache struct {
	SkillId          *int32 `protobuf:"varint,1,req,name=skill_id" json:"skill_id,omitempty"`
	SkillLv          *int32 `protobuf:"varint,2,req,name=skill_lv" json:"skill_lv,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PlunderHeroSkillCache) Reset()         { *m = PlunderHeroSkillCache{} }
func (m *PlunderHeroSkillCache) String() string { return proto.CompactTextString(m) }
func (*PlunderHeroSkillCache) ProtoMessage()    {}

func (m *PlunderHeroSkillCache) GetSkillId() int32 {
	if m != nil && m.SkillId != nil {
		return *m.SkillId
	}
	return 0
}

func (m *PlunderHeroSkillCache) GetSkillLv() int32 {
	if m != nil && m.SkillLv != nil {
		return *m.SkillLv
	}
	return 0
}

func (m *PlunderHeroSkillCache) SetSkillId(value int32) {
	if m != nil {
		if m.SkillId != nil {
			*m.SkillId = value
			return
		}
		m.SkillId = proto.Int32(value)
	}
}

func (m *PlunderHeroSkillCache) SetSkillLv(value int32) {
	if m != nil {
		if m.SkillLv != nil {
			*m.SkillLv = value
			return
		}
		m.SkillLv = proto.Int32(value)
	}
}

type PlunderHeroCache struct {
	Uid              *int64                           `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	SchemeId         *int32                           `protobuf:"varint,2,req,name=scheme_id" json:"scheme_id,omitempty"`
	Lv               *int32                           `protobuf:"varint,3,req,name=lv" json:"lv,omitempty"`
	Stage            *int32                           `protobuf:"varint,4,req,name=stage" json:"stage,omitempty"`
	Rank             *int32                           `protobuf:"varint,5,req,name=rank" json:"rank,omitempty"`
	SkillList        map[int32]*PlunderHeroSkillCache `protobuf:"bytes,6,rep,name=skill_list" json:"skill_list,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Properties       []int32                          `protobuf:"varint,7,rep,name=properties" json:"properties,omitempty"`
	XXX_unrecognized []byte                           `json:"-"`
}

func (m *PlunderHeroCache) Reset()         { *m = PlunderHeroCache{} }
func (m *PlunderHeroCache) String() string { return proto.CompactTextString(m) }
func (*PlunderHeroCache) ProtoMessage()    {}

func (m *PlunderHeroCache) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *PlunderHeroCache) GetSchemeId() int32 {
	if m != nil && m.SchemeId != nil {
		return *m.SchemeId
	}
	return 0
}

func (m *PlunderHeroCache) GetLv() int32 {
	if m != nil && m.Lv != nil {
		return *m.Lv
	}
	return 0
}

func (m *PlunderHeroCache) GetStage() int32 {
	if m != nil && m.Stage != nil {
		return *m.Stage
	}
	return 0
}

func (m *PlunderHeroCache) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *PlunderHeroCache) GetSkillList() map[int32]*PlunderHeroSkillCache {
	if m != nil {
		return m.SkillList
	}
	return nil
}

func (m *PlunderHeroCache) GetProperties() []int32 {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *PlunderHeroCache) SetUid(value int64) {
	if m != nil {
		if m.Uid != nil {
			*m.Uid = value
			return
		}
		m.Uid = proto.Int64(value)
	}
}

func (m *PlunderHeroCache) SetSchemeId(value int32) {
	if m != nil {
		if m.SchemeId != nil {
			*m.SchemeId = value
			return
		}
		m.SchemeId = proto.Int32(value)
	}
}

func (m *PlunderHeroCache) SetLv(value int32) {
	if m != nil {
		if m.Lv != nil {
			*m.Lv = value
			return
		}
		m.Lv = proto.Int32(value)
	}
}

func (m *PlunderHeroCache) SetStage(value int32) {
	if m != nil {
		if m.Stage != nil {
			*m.Stage = value
			return
		}
		m.Stage = proto.Int32(value)
	}
}

func (m *PlunderHeroCache) SetRank(value int32) {
	if m != nil {
		if m.Rank != nil {
			*m.Rank = value
			return
		}
		m.Rank = proto.Int32(value)
	}
}

func (m *PlunderHeroCache) SetSkillList(value map[int32]*PlunderHeroSkillCache) {
	if m != nil {
		m.SkillList = value
	}
}

func (m *PlunderHeroCache) SetProperties(value []int32) {
	if m != nil {
		m.Properties = value
	}
}

type PlunderAwardCache struct {
	Type             *int32 `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Code             *int32 `protobuf:"varint,2,req,name=code" json:"code,omitempty"`
	Amount           *int32 `protobuf:"varint,3,req,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PlunderAwardCache) Reset()         { *m = PlunderAwardCache{} }
func (m *PlunderAwardCache) String() string { return proto.CompactTextString(m) }
func (*PlunderAwardCache) ProtoMessage()    {}

func (m *PlunderAwardCache) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *PlunderAwardCache) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *PlunderAwardCache) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *PlunderAwardCache) SetType(value int32) {
	if m != nil {
		if m.Type != nil {
			*m.Type = value
			return
		}
		m.Type = proto.Int32(value)
	}
}

func (m *PlunderAwardCache) SetCode(value int32) {
	if m != nil {
		if m.Code != nil {
			*m.Code = value
			return
		}
		m.Code = proto.Int32(value)
	}
}

func (m *PlunderAwardCache) SetAmount(value int32) {
	if m != nil {
		if m.Amount != nil {
			*m.Amount = value
			return
		}
		m.Amount = proto.Int32(value)
	}
}

type PlunderTeamCache struct {
	Pos              *int32               `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	TeamId           *int64               `protobuf:"varint,2,req,name=team_id" json:"team_id,omitempty"`
	PlunderId        *int32               `protobuf:"varint,3,req,name=plunder_id" json:"plunder_id,omitempty"`
	RoleUid          *int64               `protobuf:"varint,4,req,name=role_uid" json:"role_uid,omitempty"`
	RoleName         *string              `protobuf:"bytes,5,req,name=role_name" json:"role_name,omitempty"`
	RoleLv           *int32               `protobuf:"varint,6,req,name=role_lv" json:"role_lv,omitempty"`
	Heros            []*PlunderHeroCache  `protobuf:"bytes,7,rep,name=heros" json:"heros,omitempty"`
	StartTime        *int64               `protobuf:"varint,8,req,name=start_time" json:"start_time,omitempty"`
	LeastAward       []*PlunderAwardCache `protobuf:"bytes,9,rep,name=least_award" json:"least_award,omitempty"`
	MoreAward        []*PlunderAwardCache `protobuf:"bytes,10,rep,name=more_award" json:"more_award,omitempty"`
	ReportIds        []string             `protobuf:"bytes,11,rep,name=report_ids" json:"report_ids,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *PlunderTeamCache) Reset()         { *m = PlunderTeamCache{} }
func (m *PlunderTeamCache) String() string { return proto.CompactTextString(m) }
func (*PlunderTeamCache) ProtoMessage()    {}

func (m *PlunderTeamCache) GetPos() int32 {
	if m != nil && m.Pos != nil {
		return *m.Pos
	}
	return 0
}

func (m *PlunderTeamCache) GetTeamId() int64 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *PlunderTeamCache) GetPlunderId() int32 {
	if m != nil && m.PlunderId != nil {
		return *m.PlunderId
	}
	return 0
}

func (m *PlunderTeamCache) GetRoleUid() int64 {
	if m != nil && m.RoleUid != nil {
		return *m.RoleUid
	}
	return 0
}

func (m *PlunderTeamCache) GetRoleName() string {
	if m != nil && m.RoleName != nil {
		return *m.RoleName
	}
	return ""
}

func (m *PlunderTeamCache) GetRoleLv() int32 {
	if m != nil && m.RoleLv != nil {
		return *m.RoleLv
	}
	return 0
}

func (m *PlunderTeamCache) GetHeros() []*PlunderHeroCache {
	if m != nil {
		return m.Heros
	}
	return nil
}

func (m *PlunderTeamCache) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *PlunderTeamCache) GetLeastAward() []*PlunderAwardCache {
	if m != nil {
		return m.LeastAward
	}
	return nil
}

func (m *PlunderTeamCache) GetMoreAward() []*PlunderAwardCache {
	if m != nil {
		return m.MoreAward
	}
	return nil
}

func (m *PlunderTeamCache) GetReportIds() []string {
	if m != nil {
		return m.ReportIds
	}
	return nil
}

func (m *PlunderTeamCache) SetPos(value int32) {
	if m != nil {
		if m.Pos != nil {
			*m.Pos = value
			return
		}
		m.Pos = proto.Int32(value)
	}
}

func (m *PlunderTeamCache) SetTeamId(value int64) {
	if m != nil {
		if m.TeamId != nil {
			*m.TeamId = value
			return
		}
		m.TeamId = proto.Int64(value)
	}
}

func (m *PlunderTeamCache) SetPlunderId(value int32) {
	if m != nil {
		if m.PlunderId != nil {
			*m.PlunderId = value
			return
		}
		m.PlunderId = proto.Int32(value)
	}
}

func (m *PlunderTeamCache) SetRoleUid(value int64) {
	if m != nil {
		if m.RoleUid != nil {
			*m.RoleUid = value
			return
		}
		m.RoleUid = proto.Int64(value)
	}
}

func (m *PlunderTeamCache) SetRoleName(value string) {
	if m != nil {
		if m.RoleName != nil {
			*m.RoleName = value
			return
		}
		m.RoleName = proto.String(value)
	}
}

func (m *PlunderTeamCache) SetRoleLv(value int32) {
	if m != nil {
		if m.RoleLv != nil {
			*m.RoleLv = value
			return
		}
		m.RoleLv = proto.Int32(value)
	}
}

func (m *PlunderTeamCache) SetHeros(value []*PlunderHeroCache) {
	if m != nil {
		m.Heros = value
	}
}

func (m *PlunderTeamCache) SetStartTime(value int64) {
	if m != nil {
		if m.StartTime != nil {
			*m.StartTime = value
			return
		}
		m.StartTime = proto.Int64(value)
	}
}

func (m *PlunderTeamCache) SetLeastAward(value []*PlunderAwardCache) {
	if m != nil {
		m.LeastAward = value
	}
}

func (m *PlunderTeamCache) SetMoreAward(value []*PlunderAwardCache) {
	if m != nil {
		m.MoreAward = value
	}
}

func (m *PlunderTeamCache) SetReportIds(value []string) {
	if m != nil {
		m.ReportIds = value
	}
}

// 掠夺日志
type PlunderReportCache struct {
	ReportId         *int64               `protobuf:"varint,1,req,name=report_id" json:"report_id,omitempty"`
	AttackRoleUid    *int64               `protobuf:"varint,2,req,name=attack_role_uid" json:"attack_role_uid,omitempty"`
	AttackRoleName   *string              `protobuf:"bytes,3,req,name=attack_role_name" json:"attack_role_name,omitempty"`
	AttackRoleLv     *int32               `protobuf:"varint,4,req,name=attack_role_lv" json:"attack_role_lv,omitempty"`
	DefenceRoleUid   *int64               `protobuf:"varint,5,req,name=defence_role_uid" json:"defence_role_uid,omitempty"`
	DefenceRoleName  *string              `protobuf:"bytes,6,req,name=defence_role_name" json:"defence_role_name,omitempty"`
	DefenceRoleLv    *int32               `protobuf:"varint,7,req,name=defence_role_lv" json:"defence_role_lv,omitempty"`
	Heros            []*PlunderHeroCache  `protobuf:"bytes,8,rep,name=heros" json:"heros,omitempty"`
	FightTime        *int64               `protobuf:"varint,9,req,name=fight_time" json:"fight_time,omitempty"`
	FightResult      []int32              `protobuf:"varint,10,rep,name=fight_result" json:"fight_result,omitempty"`
	FightType        *int32               `protobuf:"varint,11,req,name=fight_type" json:"fight_type,omitempty"`
	HasShield        *bool                `protobuf:"varint,12,req,name=has_shield" json:"has_shield,omitempty"`
	PlunderAward     []*PlunderAwardCache `protobuf:"bytes,13,rep,name=plunder_award" json:"plunder_award,omitempty"`
	IsRevenged       *bool                `protobuf:"varint,14,req,name=is_revenged" json:"is_revenged,omitempty"`
	RevengeCd        *int64               `protobuf:"varint,15,req,name=revenge_cd" json:"revenge_cd,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *PlunderReportCache) Reset()         { *m = PlunderReportCache{} }
func (m *PlunderReportCache) String() string { return proto.CompactTextString(m) }
func (*PlunderReportCache) ProtoMessage()    {}

func (m *PlunderReportCache) GetReportId() int64 {
	if m != nil && m.ReportId != nil {
		return *m.ReportId
	}
	return 0
}

func (m *PlunderReportCache) GetAttackRoleUid() int64 {
	if m != nil && m.AttackRoleUid != nil {
		return *m.AttackRoleUid
	}
	return 0
}

func (m *PlunderReportCache) GetAttackRoleName() string {
	if m != nil && m.AttackRoleName != nil {
		return *m.AttackRoleName
	}
	return ""
}

func (m *PlunderReportCache) GetAttackRoleLv() int32 {
	if m != nil && m.AttackRoleLv != nil {
		return *m.AttackRoleLv
	}
	return 0
}

func (m *PlunderReportCache) GetDefenceRoleUid() int64 {
	if m != nil && m.DefenceRoleUid != nil {
		return *m.DefenceRoleUid
	}
	return 0
}

func (m *PlunderReportCache) GetDefenceRoleName() string {
	if m != nil && m.DefenceRoleName != nil {
		return *m.DefenceRoleName
	}
	return ""
}

func (m *PlunderReportCache) GetDefenceRoleLv() int32 {
	if m != nil && m.DefenceRoleLv != nil {
		return *m.DefenceRoleLv
	}
	return 0
}

func (m *PlunderReportCache) GetHeros() []*PlunderHeroCache {
	if m != nil {
		return m.Heros
	}
	return nil
}

func (m *PlunderReportCache) GetFightTime() int64 {
	if m != nil && m.FightTime != nil {
		return *m.FightTime
	}
	return 0
}

func (m *PlunderReportCache) GetFightResult() []int32 {
	if m != nil {
		return m.FightResult
	}
	return nil
}

func (m *PlunderReportCache) GetFightType() int32 {
	if m != nil && m.FightType != nil {
		return *m.FightType
	}
	return 0
}

func (m *PlunderReportCache) GetHasShield() bool {
	if m != nil && m.HasShield != nil {
		return *m.HasShield
	}
	return false
}

func (m *PlunderReportCache) GetPlunderAward() []*PlunderAwardCache {
	if m != nil {
		return m.PlunderAward
	}
	return nil
}

func (m *PlunderReportCache) GetIsRevenged() bool {
	if m != nil && m.IsRevenged != nil {
		return *m.IsRevenged
	}
	return false
}

func (m *PlunderReportCache) GetRevengeCd() int64 {
	if m != nil && m.RevengeCd != nil {
		return *m.RevengeCd
	}
	return 0
}

func (m *PlunderReportCache) SetReportId(value int64) {
	if m != nil {
		if m.ReportId != nil {
			*m.ReportId = value
			return
		}
		m.ReportId = proto.Int64(value)
	}
}

func (m *PlunderReportCache) SetAttackRoleUid(value int64) {
	if m != nil {
		if m.AttackRoleUid != nil {
			*m.AttackRoleUid = value
			return
		}
		m.AttackRoleUid = proto.Int64(value)
	}
}

func (m *PlunderReportCache) SetAttackRoleName(value string) {
	if m != nil {
		if m.AttackRoleName != nil {
			*m.AttackRoleName = value
			return
		}
		m.AttackRoleName = proto.String(value)
	}
}

func (m *PlunderReportCache) SetAttackRoleLv(value int32) {
	if m != nil {
		if m.AttackRoleLv != nil {
			*m.AttackRoleLv = value
			return
		}
		m.AttackRoleLv = proto.Int32(value)
	}
}

func (m *PlunderReportCache) SetDefenceRoleUid(value int64) {
	if m != nil {
		if m.DefenceRoleUid != nil {
			*m.DefenceRoleUid = value
			return
		}
		m.DefenceRoleUid = proto.Int64(value)
	}
}

func (m *PlunderReportCache) SetDefenceRoleName(value string) {
	if m != nil {
		if m.DefenceRoleName != nil {
			*m.DefenceRoleName = value
			return
		}
		m.DefenceRoleName = proto.String(value)
	}
}

func (m *PlunderReportCache) SetDefenceRoleLv(value int32) {
	if m != nil {
		if m.DefenceRoleLv != nil {
			*m.DefenceRoleLv = value
			return
		}
		m.DefenceRoleLv = proto.Int32(value)
	}
}

func (m *PlunderReportCache) SetHeros(value []*PlunderHeroCache) {
	if m != nil {
		m.Heros = value
	}
}

func (m *PlunderReportCache) SetFightTime(value int64) {
	if m != nil {
		if m.FightTime != nil {
			*m.FightTime = value
			return
		}
		m.FightTime = proto.Int64(value)
	}
}

func (m *PlunderReportCache) SetFightResult(value []int32) {
	if m != nil {
		m.FightResult = value
	}
}

func (m *PlunderReportCache) SetFightType(value int32) {
	if m != nil {
		if m.FightType != nil {
			*m.FightType = value
			return
		}
		m.FightType = proto.Int32(value)
	}
}

func (m *PlunderReportCache) SetHasShield(value bool) {
	if m != nil {
		if m.HasShield != nil {
			*m.HasShield = value
			return
		}
		m.HasShield = proto.Bool(value)
	}
}

func (m *PlunderReportCache) SetPlunderAward(value []*PlunderAwardCache) {
	if m != nil {
		m.PlunderAward = value
	}
}

func (m *PlunderReportCache) SetIsRevenged(value bool) {
	if m != nil {
		if m.IsRevenged != nil {
			*m.IsRevenged = value
			return
		}
		m.IsRevenged = proto.Bool(value)
	}
}

func (m *PlunderReportCache) SetRevengeCd(value int64) {
	if m != nil {
		if m.RevengeCd != nil {
			*m.RevengeCd = value
			return
		}
		m.RevengeCd = proto.Int64(value)
	}
}

type PlunderTeamLogCache struct {
	TeamId           *int64   `protobuf:"varint,1,req,name=team_id" json:"team_id,omitempty"`
	StartTime        *int64   `protobuf:"varint,2,req,name=start_time" json:"start_time,omitempty"`
	ReportIds        []string `protobuf:"bytes,3,rep,name=report_ids" json:"report_ids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PlunderTeamLogCache) Reset()         { *m = PlunderTeamLogCache{} }
func (m *PlunderTeamLogCache) String() string { return proto.CompactTextString(m) }
func (*PlunderTeamLogCache) ProtoMessage()    {}

func (m *PlunderTeamLogCache) GetTeamId() int64 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *PlunderTeamLogCache) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *PlunderTeamLogCache) GetReportIds() []string {
	if m != nil {
		return m.ReportIds
	}
	return nil
}

func (m *PlunderTeamLogCache) SetTeamId(value int64) {
	if m != nil {
		if m.TeamId != nil {
			*m.TeamId = value
			return
		}
		m.TeamId = proto.Int64(value)
	}
}

func (m *PlunderTeamLogCache) SetStartTime(value int64) {
	if m != nil {
		if m.StartTime != nil {
			*m.StartTime = value
			return
		}
		m.StartTime = proto.Int64(value)
	}
}

func (m *PlunderTeamLogCache) SetReportIds(value []string) {
	if m != nil {
		m.ReportIds = value
	}
}

type PlunderLogCache struct {
	StartTime        *int64  `protobuf:"varint,1,req,name=start_time" json:"start_time,omitempty"`
	ReportId         *string `protobuf:"bytes,2,req,name=report_id" json:"report_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlunderLogCache) Reset()         { *m = PlunderLogCache{} }
func (m *PlunderLogCache) String() string { return proto.CompactTextString(m) }
func (*PlunderLogCache) ProtoMessage()    {}

func (m *PlunderLogCache) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *PlunderLogCache) GetReportId() string {
	if m != nil && m.ReportId != nil {
		return *m.ReportId
	}
	return ""
}

func (m *PlunderLogCache) SetStartTime(value int64) {
	if m != nil {
		if m.StartTime != nil {
			*m.StartTime = value
			return
		}
		m.StartTime = proto.Int64(value)
	}
}

func (m *PlunderLogCache) SetReportId(value string) {
	if m != nil {
		if m.ReportId != nil {
			*m.ReportId = value
			return
		}
		m.ReportId = proto.String(value)
	}
}

type PlunderCache struct {
	Properties             map[int32]int32        `protobuf:"bytes,1,rep,name=properties" json:"properties,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	PlunderTeamLogs        []*PlunderTeamLogCache `protobuf:"bytes,2,rep,name=plunder_team_logs" json:"plunder_team_logs,omitempty"`
	PlunderLogs            []*PlunderLogCache     `protobuf:"bytes,3,rep,name=plunder_logs" json:"plunder_logs,omitempty"`
	AttackTimesForDaily    *int32                 `protobuf:"varint,4,req,name=attack_times_for_daily" json:"attack_times_for_daily,omitempty"`
	LastAttackTimeForDaily *int64                 `protobuf:"varint,5,req,name=last_attack_time_for_daily" json:"last_attack_time_for_daily,omitempty"`
	XXX_unrecognized       []byte                 `json:"-"`
}

func (m *PlunderCache) Reset()         { *m = PlunderCache{} }
func (m *PlunderCache) String() string { return proto.CompactTextString(m) }
func (*PlunderCache) ProtoMessage()    {}

func (m *PlunderCache) GetProperties() map[int32]int32 {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *PlunderCache) GetPlunderTeamLogs() []*PlunderTeamLogCache {
	if m != nil {
		return m.PlunderTeamLogs
	}
	return nil
}

func (m *PlunderCache) GetPlunderLogs() []*PlunderLogCache {
	if m != nil {
		return m.PlunderLogs
	}
	return nil
}

func (m *PlunderCache) GetAttackTimesForDaily() int32 {
	if m != nil && m.AttackTimesForDaily != nil {
		return *m.AttackTimesForDaily
	}
	return 0
}

func (m *PlunderCache) GetLastAttackTimeForDaily() int64 {
	if m != nil && m.LastAttackTimeForDaily != nil {
		return *m.LastAttackTimeForDaily
	}
	return 0
}

func (m *PlunderCache) SetProperties(value map[int32]int32) {
	if m != nil {
		m.Properties = value
	}
}

func (m *PlunderCache) SetPlunderTeamLogs(value []*PlunderTeamLogCache) {
	if m != nil {
		m.PlunderTeamLogs = value
	}
}

func (m *PlunderCache) SetPlunderLogs(value []*PlunderLogCache) {
	if m != nil {
		m.PlunderLogs = value
	}
}

func (m *PlunderCache) SetAttackTimesForDaily(value int32) {
	if m != nil {
		if m.AttackTimesForDaily != nil {
			*m.AttackTimesForDaily = value
			return
		}
		m.AttackTimesForDaily = proto.Int32(value)
	}
}

func (m *PlunderCache) SetLastAttackTimeForDaily(value int64) {
	if m != nil {
		if m.LastAttackTimeForDaily != nil {
			*m.LastAttackTimeForDaily = value
			return
		}
		m.LastAttackTimeForDaily = proto.Int64(value)
	}
}

func init() {
}
