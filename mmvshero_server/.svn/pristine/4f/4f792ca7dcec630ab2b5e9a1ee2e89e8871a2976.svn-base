// Code generated by protoc-gen-go.
// source: friend_cache.proto
// DO NOT EDIT!

package cache

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type FriendCache struct {
	Id                    *int64           `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	SelfId                *int64           `protobuf:"varint,2,req,name=selfId" json:"selfId,omitempty"`
	WinTimes              *int32           `protobuf:"varint,3,req,name=winTimes" json:"winTimes,omitempty"`
	LoseTimes             *int32           `protobuf:"varint,4,req,name=loseTimes" json:"loseTimes,omitempty"`
	SendExcitationTime    *int64           `protobuf:"varint,5,req,name=sendExcitationTime" json:"sendExcitationTime,omitempty"`
	ReceiveExcitationTime *int64           `protobuf:"varint,6,req,name=receiveExcitationTime" json:"receiveExcitationTime,omitempty"`
	UseExcitationTime     *int64           `protobuf:"varint,7,req,name=useExcitationTime" json:"useExcitationTime,omitempty"`
	FriendInfo            *FriendInfoCache `protobuf:"bytes,8,req,name=friendInfo" json:"friendInfo,omitempty"`
	XXX_unrecognized      []byte           `json:"-"`
}

func (m *FriendCache) Reset()         { *m = FriendCache{} }
func (m *FriendCache) String() string { return proto.CompactTextString(m) }
func (*FriendCache) ProtoMessage()    {}

func (m *FriendCache) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *FriendCache) GetSelfId() int64 {
	if m != nil && m.SelfId != nil {
		return *m.SelfId
	}
	return 0
}

func (m *FriendCache) GetWinTimes() int32 {
	if m != nil && m.WinTimes != nil {
		return *m.WinTimes
	}
	return 0
}

func (m *FriendCache) GetLoseTimes() int32 {
	if m != nil && m.LoseTimes != nil {
		return *m.LoseTimes
	}
	return 0
}

func (m *FriendCache) GetSendExcitationTime() int64 {
	if m != nil && m.SendExcitationTime != nil {
		return *m.SendExcitationTime
	}
	return 0
}

func (m *FriendCache) GetReceiveExcitationTime() int64 {
	if m != nil && m.ReceiveExcitationTime != nil {
		return *m.ReceiveExcitationTime
	}
	return 0
}

func (m *FriendCache) GetUseExcitationTime() int64 {
	if m != nil && m.UseExcitationTime != nil {
		return *m.UseExcitationTime
	}
	return 0
}

func (m *FriendCache) GetFriendInfo() *FriendInfoCache {
	if m != nil {
		return m.FriendInfo
	}
	return nil
}

func (m *FriendCache) SetId(value int64) {
	if m != nil {
		if m.Id != nil {
			*m.Id = value
			return
		}
		m.Id = proto.Int64(value)
	}
}

func (m *FriendCache) SetSelfId(value int64) {
	if m != nil {
		if m.SelfId != nil {
			*m.SelfId = value
			return
		}
		m.SelfId = proto.Int64(value)
	}
}

func (m *FriendCache) SetWinTimes(value int32) {
	if m != nil {
		if m.WinTimes != nil {
			*m.WinTimes = value
			return
		}
		m.WinTimes = proto.Int32(value)
	}
}

func (m *FriendCache) SetLoseTimes(value int32) {
	if m != nil {
		if m.LoseTimes != nil {
			*m.LoseTimes = value
			return
		}
		m.LoseTimes = proto.Int32(value)
	}
}

func (m *FriendCache) SetSendExcitationTime(value int64) {
	if m != nil {
		if m.SendExcitationTime != nil {
			*m.SendExcitationTime = value
			return
		}
		m.SendExcitationTime = proto.Int64(value)
	}
}

func (m *FriendCache) SetReceiveExcitationTime(value int64) {
	if m != nil {
		if m.ReceiveExcitationTime != nil {
			*m.ReceiveExcitationTime = value
			return
		}
		m.ReceiveExcitationTime = proto.Int64(value)
	}
}

func (m *FriendCache) SetUseExcitationTime(value int64) {
	if m != nil {
		if m.UseExcitationTime != nil {
			*m.UseExcitationTime = value
			return
		}
		m.UseExcitationTime = proto.Int64(value)
	}
}

func (m *FriendCache) SetFriendInfo(value *FriendInfoCache) {
	if m != nil {
		m.FriendInfo = value
	}
}

type FriendInfoCache struct {
	Id               *int64  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	LoginTime        *int64  `protobuf:"varint,2,req,name=loginTime" json:"loginTime,omitempty"`
	Level            *int32  `protobuf:"varint,3,req,name=level" json:"level,omitempty"`
	LeagueLevel      *int32  `protobuf:"varint,4,req,name=leagueLevel" json:"leagueLevel,omitempty"`
	Trophy           *int32  `protobuf:"varint,5,req,name=trophy" json:"trophy,omitempty"`
	Timestamp        *int64  `protobuf:"varint,6,req,name=timestamp" json:"timestamp,omitempty"`
	Nickname         *string `protobuf:"bytes,7,req,name=nickname" json:"nickname,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FriendInfoCache) Reset()         { *m = FriendInfoCache{} }
func (m *FriendInfoCache) String() string { return proto.CompactTextString(m) }
func (*FriendInfoCache) ProtoMessage()    {}

func (m *FriendInfoCache) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *FriendInfoCache) GetLoginTime() int64 {
	if m != nil && m.LoginTime != nil {
		return *m.LoginTime
	}
	return 0
}

func (m *FriendInfoCache) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *FriendInfoCache) GetLeagueLevel() int32 {
	if m != nil && m.LeagueLevel != nil {
		return *m.LeagueLevel
	}
	return 0
}

func (m *FriendInfoCache) GetTrophy() int32 {
	if m != nil && m.Trophy != nil {
		return *m.Trophy
	}
	return 0
}

func (m *FriendInfoCache) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *FriendInfoCache) GetNickname() string {
	if m != nil && m.Nickname != nil {
		return *m.Nickname
	}
	return ""
}

func (m *FriendInfoCache) SetId(value int64) {
	if m != nil {
		if m.Id != nil {
			*m.Id = value
			return
		}
		m.Id = proto.Int64(value)
	}
}

func (m *FriendInfoCache) SetLoginTime(value int64) {
	if m != nil {
		if m.LoginTime != nil {
			*m.LoginTime = value
			return
		}
		m.LoginTime = proto.Int64(value)
	}
}

func (m *FriendInfoCache) SetLevel(value int32) {
	if m != nil {
		if m.Level != nil {
			*m.Level = value
			return
		}
		m.Level = proto.Int32(value)
	}
}

func (m *FriendInfoCache) SetLeagueLevel(value int32) {
	if m != nil {
		if m.LeagueLevel != nil {
			*m.LeagueLevel = value
			return
		}
		m.LeagueLevel = proto.Int32(value)
	}
}

func (m *FriendInfoCache) SetTrophy(value int32) {
	if m != nil {
		if m.Trophy != nil {
			*m.Trophy = value
			return
		}
		m.Trophy = proto.Int32(value)
	}
}

func (m *FriendInfoCache) SetTimestamp(value int64) {
	if m != nil {
		if m.Timestamp != nil {
			*m.Timestamp = value
			return
		}
		m.Timestamp = proto.Int64(value)
	}
}

func (m *FriendInfoCache) SetNickname(value string) {
	if m != nil {
		if m.Nickname != nil {
			*m.Nickname = value
			return
		}
		m.Nickname = proto.String(value)
	}
}

type RequestCache struct {
	Id               *int64           `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	SelfId           *int64           `protobuf:"varint,2,req,name=selfId" json:"selfId,omitempty"`
	Timestamp        *int64           `protobuf:"varint,3,req,name=timestamp" json:"timestamp,omitempty"`
	FriendInfo       *FriendInfoCache `protobuf:"bytes,4,req,name=friendInfo" json:"friendInfo,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *RequestCache) Reset()         { *m = RequestCache{} }
func (m *RequestCache) String() string { return proto.CompactTextString(m) }
func (*RequestCache) ProtoMessage()    {}

func (m *RequestCache) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *RequestCache) GetSelfId() int64 {
	if m != nil && m.SelfId != nil {
		return *m.SelfId
	}
	return 0
}

func (m *RequestCache) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *RequestCache) GetFriendInfo() *FriendInfoCache {
	if m != nil {
		return m.FriendInfo
	}
	return nil
}

func (m *RequestCache) SetId(value int64) {
	if m != nil {
		if m.Id != nil {
			*m.Id = value
			return
		}
		m.Id = proto.Int64(value)
	}
}

func (m *RequestCache) SetSelfId(value int64) {
	if m != nil {
		if m.SelfId != nil {
			*m.SelfId = value
			return
		}
		m.SelfId = proto.Int64(value)
	}
}

func (m *RequestCache) SetTimestamp(value int64) {
	if m != nil {
		if m.Timestamp != nil {
			*m.Timestamp = value
			return
		}
		m.Timestamp = proto.Int64(value)
	}
}

func (m *RequestCache) SetFriendInfo(value *FriendInfoCache) {
	if m != nil {
		m.FriendInfo = value
	}
}

type InviteeCache struct {
	Id               *int64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	SelfId           *int64 `protobuf:"varint,2,req,name=selfId" json:"selfId,omitempty"`
	Level            *int32 `protobuf:"varint,3,req,name=level" json:"level,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *InviteeCache) Reset()         { *m = InviteeCache{} }
func (m *InviteeCache) String() string { return proto.CompactTextString(m) }
func (*InviteeCache) ProtoMessage()    {}

func (m *InviteeCache) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *InviteeCache) GetSelfId() int64 {
	if m != nil && m.SelfId != nil {
		return *m.SelfId
	}
	return 0
}

func (m *InviteeCache) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *InviteeCache) SetId(value int64) {
	if m != nil {
		if m.Id != nil {
			*m.Id = value
			return
		}
		m.Id = proto.Int64(value)
	}
}

func (m *InviteeCache) SetSelfId(value int64) {
	if m != nil {
		if m.SelfId != nil {
			*m.SelfId = value
			return
		}
		m.SelfId = proto.Int64(value)
	}
}

func (m *InviteeCache) SetLevel(value int32) {
	if m != nil {
		if m.Level != nil {
			*m.Level = value
			return
		}
		m.Level = proto.Int32(value)
	}
}

func init() {
}
