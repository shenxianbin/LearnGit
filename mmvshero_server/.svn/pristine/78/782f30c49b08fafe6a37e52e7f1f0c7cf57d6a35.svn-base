syntax="proto2";

package protocol;

import "hero.proto";
import "soldier.proto";

message MapGridInfo
{
	required int32 x = 1;
	required int32 y = 2;
	required int32 base_type = 3;
	required int32 obj_type = 4;
	required int64 id = 5;
}

message MapInfo
{
	repeated MapGridInfo map_infos = 1;
	repeated int32 map_point_list = 2;
	repeated int32 map_point_active = 3;
}

message MsgMapRefreshReq
{
	repeated MapGridInfo map_infos = 1;
	repeated int32 map_point_active = 2;
}

message MsgMapRefreshRet
{
	required int32 retcode = 1;
}

message MsgMapUpdateNotify
{
	repeated MapGridInfo map_infos = 1;
}

message MsgMapUpdatePointNotify
{
	required MapGridInfo map_info = 1;
}

//战斗信息结构体
message RoleFightInfo
{
	required int64 uid = 1;
	required string name = 2;
	required int32 lv = 3;
	required int32 stone = 4;
	required int32 trophy = 5;
	required int32 league_lv = 6;
}

message HeroFightInfo
{
	required int64 uid = 1;
	required int32 scheme_id = 2;
	required int32 lv = 3;
	required int32 stage = 4;
	required int32 rank = 5;
	repeated HeroSkillInfo skill_list = 6;
}

message SoldierFightInfo
{
	//required int64 autoId = 1; 		//地图上魔物的自增id
	required int32 schemeId= 1;			//魔物 base id
	required int32 level = 2;				//魔物等级
	required int32 stage = 3;				//品阶等级 1：一阶 2：二阶 3：三阶
	repeated SkillLevel skillLevel = 4;		//技能等级
}

message BuildingFightInfo
{
	required int64 uid = 1;
	required int32 scheme_id = 2;
	required int32 lv = 3;
	required int64 resource = 4;
}

message MapFightInfo
{
	required RoleFightInfo role = 1;
	required int32 kinglv = 2;
	repeated HeroFightInfo heros = 3;
	repeated SoldierFightInfo soldiers = 4;
	repeated BuildingFightInfo buildings = 5;
	required MapInfo map_info = 6;
}

message PvpFightInfo
{
	required RoleFightInfo role = 1;
	repeated HeroFightInfo heros = 2;
}

message MsgMapInfoReq
{
	required int64 role_uid = 1;
}

message MsgMapInfoRet
{
	required int32 retcode = 1;
	optional MapFightInfo info =2;
}

message MsgMapRemoveObstacleReq
{
	required int32 scheme_id = 1;
	required int32 pos_x = 2;
	required int32 pos_y = 3;
}

message MsgMapRemoveObstacleRet
{
	required int32 retcode = 1;
}

message MsgMapUnLockPointReq
{
	required int32 point_id = 1;
}

message MsgMapUnLockPointRet
{
	required int32 retcode = 1;
	required int32 point_id = 2;
}