// Code generated by protoc-gen-go.
// source: sign.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type SignInfo struct {
	YearMonth        *int32 `protobuf:"varint,1,req,name=year_month" json:"year_month,omitempty"`
	Count            *int32 `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	DayIndex         *int32 `protobuf:"varint,3,req,name=day_index" json:"day_index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SignInfo) Reset()         { *m = SignInfo{} }
func (m *SignInfo) String() string { return proto.CompactTextString(m) }
func (*SignInfo) ProtoMessage()    {}

func (m *SignInfo) GetYearMonth() int32 {
	if m != nil && m.YearMonth != nil {
		return *m.YearMonth
	}
	return 0
}

func (m *SignInfo) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *SignInfo) GetDayIndex() int32 {
	if m != nil && m.DayIndex != nil {
		return *m.DayIndex
	}
	return 0
}

func (m *SignInfo) SetYearMonth(value int32) {
	if m != nil {
		if m.YearMonth != nil {
			*m.YearMonth = value
			return
		}
		m.YearMonth = proto.Int32(value)
	}
}

func (m *SignInfo) SetCount(value int32) {
	if m != nil {
		if m.Count != nil {
			*m.Count = value
			return
		}
		m.Count = proto.Int32(value)
	}
}

func (m *SignInfo) SetDayIndex(value int32) {
	if m != nil {
		if m.DayIndex != nil {
			*m.DayIndex = value
			return
		}
		m.DayIndex = proto.Int32(value)
	}
}

type MsgSignInitReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgSignInitReq) Reset()         { *m = MsgSignInitReq{} }
func (m *MsgSignInitReq) String() string { return proto.CompactTextString(m) }
func (*MsgSignInitReq) ProtoMessage()    {}

type MsgSignInitRet struct {
	Info             *SignInfo `protobuf:"bytes,1,req,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *MsgSignInitRet) Reset()         { *m = MsgSignInitRet{} }
func (m *MsgSignInitRet) String() string { return proto.CompactTextString(m) }
func (*MsgSignInitRet) ProtoMessage()    {}

func (m *MsgSignInitRet) GetInfo() *SignInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *MsgSignInitRet) SetInfo(value *SignInfo) {
	if m != nil {
		m.Info = value
	}
}

type MsgSignInReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgSignInReq) Reset()         { *m = MsgSignInReq{} }
func (m *MsgSignInReq) String() string { return proto.CompactTextString(m) }
func (*MsgSignInReq) ProtoMessage()    {}

type MsgSignInRet struct {
	Retcode          *int32       `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	Info             *SignInfo    `protobuf:"bytes,2,req,name=info" json:"info,omitempty"`
	Awardinfos       []*AwardInfo `protobuf:"bytes,3,rep,name=awardinfos" json:"awardinfos,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *MsgSignInRet) Reset()         { *m = MsgSignInRet{} }
func (m *MsgSignInRet) String() string { return proto.CompactTextString(m) }
func (*MsgSignInRet) ProtoMessage()    {}

func (m *MsgSignInRet) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *MsgSignInRet) GetInfo() *SignInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *MsgSignInRet) GetAwardinfos() []*AwardInfo {
	if m != nil {
		return m.Awardinfos
	}
	return nil
}

func (m *MsgSignInRet) SetRetcode(value int32) {
	if m != nil {
		if m.Retcode != nil {
			*m.Retcode = value
			return
		}
		m.Retcode = proto.Int32(value)
	}
}

func (m *MsgSignInRet) SetInfo(value *SignInfo) {
	if m != nil {
		m.Info = value
	}
}

func (m *MsgSignInRet) SetAwardinfos(value []*AwardInfo) {
	if m != nil {
		m.Awardinfos = value
	}
}

func init() {
}
