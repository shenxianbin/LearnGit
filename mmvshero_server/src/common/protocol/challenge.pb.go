// Code generated by protoc-gen-go.
// source: challenge.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ChallengeWaveInfo struct {
	Wave             *int32 `protobuf:"varint,1,req,name=wave" json:"wave,omitempty"`
	Id               *int32 `protobuf:"varint,2,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ChallengeWaveInfo) Reset()         { *m = ChallengeWaveInfo{} }
func (m *ChallengeWaveInfo) String() string { return proto.CompactTextString(m) }
func (*ChallengeWaveInfo) ProtoMessage()    {}

func (m *ChallengeWaveInfo) GetWave() int32 {
	if m != nil && m.Wave != nil {
		return *m.Wave
	}
	return 0
}

func (m *ChallengeWaveInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChallengeWaveInfo) SetWave(value int32) {
	if m != nil {
		if m.Wave != nil {
			*m.Wave = value
			return
		}
		m.Wave = proto.Int32(value)
	}
}

func (m *ChallengeWaveInfo) SetId(value int32) {
	if m != nil {
		if m.Id != nil {
			*m.Id = value
			return
		}
		m.Id = proto.Int32(value)
	}
}

type ChallengeLayerInfo struct {
	Layer            *int32               `protobuf:"varint,1,req,name=layer" json:"layer,omitempty"`
	LayerId          *int32               `protobuf:"varint,2,req,name=layer_id" json:"layer_id,omitempty"`
	Waves            []*ChallengeWaveInfo `protobuf:"bytes,3,rep,name=waves" json:"waves,omitempty"`
	BanBuildingType  *int32               `protobuf:"varint,4,req,name=ban_building_type" json:"ban_building_type,omitempty"`
	BanSoldierId     *int32               `protobuf:"varint,5,req,name=ban_soldier_id" json:"ban_soldier_id,omitempty"`
	BanKingskillId   *int32               `protobuf:"varint,6,req,name=ban_kingskill_id" json:"ban_kingskill_id,omitempty"`
	Awards           []*AwardInfo         `protobuf:"bytes,7,rep,name=awards" json:"awards,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ChallengeLayerInfo) Reset()         { *m = ChallengeLayerInfo{} }
func (m *ChallengeLayerInfo) String() string { return proto.CompactTextString(m) }
func (*ChallengeLayerInfo) ProtoMessage()    {}

func (m *ChallengeLayerInfo) GetLayer() int32 {
	if m != nil && m.Layer != nil {
		return *m.Layer
	}
	return 0
}

func (m *ChallengeLayerInfo) GetLayerId() int32 {
	if m != nil && m.LayerId != nil {
		return *m.LayerId
	}
	return 0
}

func (m *ChallengeLayerInfo) GetWaves() []*ChallengeWaveInfo {
	if m != nil {
		return m.Waves
	}
	return nil
}

func (m *ChallengeLayerInfo) GetBanBuildingType() int32 {
	if m != nil && m.BanBuildingType != nil {
		return *m.BanBuildingType
	}
	return 0
}

func (m *ChallengeLayerInfo) GetBanSoldierId() int32 {
	if m != nil && m.BanSoldierId != nil {
		return *m.BanSoldierId
	}
	return 0
}

func (m *ChallengeLayerInfo) GetBanKingskillId() int32 {
	if m != nil && m.BanKingskillId != nil {
		return *m.BanKingskillId
	}
	return 0
}

func (m *ChallengeLayerInfo) GetAwards() []*AwardInfo {
	if m != nil {
		return m.Awards
	}
	return nil
}

func (m *ChallengeLayerInfo) SetLayer(value int32) {
	if m != nil {
		if m.Layer != nil {
			*m.Layer = value
			return
		}
		m.Layer = proto.Int32(value)
	}
}

func (m *ChallengeLayerInfo) SetLayerId(value int32) {
	if m != nil {
		if m.LayerId != nil {
			*m.LayerId = value
			return
		}
		m.LayerId = proto.Int32(value)
	}
}

func (m *ChallengeLayerInfo) SetWaves(value []*ChallengeWaveInfo) {
	if m != nil {
		m.Waves = value
	}
}

func (m *ChallengeLayerInfo) SetBanBuildingType(value int32) {
	if m != nil {
		if m.BanBuildingType != nil {
			*m.BanBuildingType = value
			return
		}
		m.BanBuildingType = proto.Int32(value)
	}
}

func (m *ChallengeLayerInfo) SetBanSoldierId(value int32) {
	if m != nil {
		if m.BanSoldierId != nil {
			*m.BanSoldierId = value
			return
		}
		m.BanSoldierId = proto.Int32(value)
	}
}

func (m *ChallengeLayerInfo) SetBanKingskillId(value int32) {
	if m != nil {
		if m.BanKingskillId != nil {
			*m.BanKingskillId = value
			return
		}
		m.BanKingskillId = proto.Int32(value)
	}
}

func (m *ChallengeLayerInfo) SetAwards(value []*AwardInfo) {
	if m != nil {
		m.Awards = value
	}
}

// 闯关模式 查询
type MsgChallengeQueryReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgChallengeQueryReq) Reset()         { *m = MsgChallengeQueryReq{} }
func (m *MsgChallengeQueryReq) String() string { return proto.CompactTextString(m) }
func (*MsgChallengeQueryReq) ProtoMessage()    {}

type MsgChallengeQueryRet struct {
	ChallengeCount     *int32                `protobuf:"varint,1,req,name=challenge_count" json:"challenge_count,omitempty"`
	ChallengeChance    *int32                `protobuf:"varint,2,req,name=challenge_chance" json:"challenge_chance,omitempty"`
	CurLayer           *int32                `protobuf:"varint,3,req,name=cur_layer" json:"cur_layer,omitempty"`
	ChallengeResetTime *int32                `protobuf:"varint,4,req,name=challenge_reset_time" json:"challenge_reset_time,omitempty"`
	Layers             []*ChallengeLayerInfo `protobuf:"bytes,5,rep,name=layers" json:"layers,omitempty"`
	XXX_unrecognized   []byte                `json:"-"`
}

func (m *MsgChallengeQueryRet) Reset()         { *m = MsgChallengeQueryRet{} }
func (m *MsgChallengeQueryRet) String() string { return proto.CompactTextString(m) }
func (*MsgChallengeQueryRet) ProtoMessage()    {}

func (m *MsgChallengeQueryRet) GetChallengeCount() int32 {
	if m != nil && m.ChallengeCount != nil {
		return *m.ChallengeCount
	}
	return 0
}

func (m *MsgChallengeQueryRet) GetChallengeChance() int32 {
	if m != nil && m.ChallengeChance != nil {
		return *m.ChallengeChance
	}
	return 0
}

func (m *MsgChallengeQueryRet) GetCurLayer() int32 {
	if m != nil && m.CurLayer != nil {
		return *m.CurLayer
	}
	return 0
}

func (m *MsgChallengeQueryRet) GetChallengeResetTime() int32 {
	if m != nil && m.ChallengeResetTime != nil {
		return *m.ChallengeResetTime
	}
	return 0
}

func (m *MsgChallengeQueryRet) GetLayers() []*ChallengeLayerInfo {
	if m != nil {
		return m.Layers
	}
	return nil
}

func (m *MsgChallengeQueryRet) SetChallengeCount(value int32) {
	if m != nil {
		if m.ChallengeCount != nil {
			*m.ChallengeCount = value
			return
		}
		m.ChallengeCount = proto.Int32(value)
	}
}

func (m *MsgChallengeQueryRet) SetChallengeChance(value int32) {
	if m != nil {
		if m.ChallengeChance != nil {
			*m.ChallengeChance = value
			return
		}
		m.ChallengeChance = proto.Int32(value)
	}
}

func (m *MsgChallengeQueryRet) SetCurLayer(value int32) {
	if m != nil {
		if m.CurLayer != nil {
			*m.CurLayer = value
			return
		}
		m.CurLayer = proto.Int32(value)
	}
}

func (m *MsgChallengeQueryRet) SetChallengeResetTime(value int32) {
	if m != nil {
		if m.ChallengeResetTime != nil {
			*m.ChallengeResetTime = value
			return
		}
		m.ChallengeResetTime = proto.Int32(value)
	}
}

func (m *MsgChallengeQueryRet) SetLayers(value []*ChallengeLayerInfo) {
	if m != nil {
		m.Layers = value
	}
}

// 闯关模式 开战
type MsgChallengeStartFightReq struct {
	Layer            *int32 `protobuf:"varint,1,req,name=layer" json:"layer,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgChallengeStartFightReq) Reset()         { *m = MsgChallengeStartFightReq{} }
func (m *MsgChallengeStartFightReq) String() string { return proto.CompactTextString(m) }
func (*MsgChallengeStartFightReq) ProtoMessage()    {}

func (m *MsgChallengeStartFightReq) GetLayer() int32 {
	if m != nil && m.Layer != nil {
		return *m.Layer
	}
	return 0
}

func (m *MsgChallengeStartFightReq) SetLayer(value int32) {
	if m != nil {
		if m.Layer != nil {
			*m.Layer = value
			return
		}
		m.Layer = proto.Int32(value)
	}
}

type MsgChallengeStartFightRet struct {
	Retcode          *int32 `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgChallengeStartFightRet) Reset()         { *m = MsgChallengeStartFightRet{} }
func (m *MsgChallengeStartFightRet) String() string { return proto.CompactTextString(m) }
func (*MsgChallengeStartFightRet) ProtoMessage()    {}

func (m *MsgChallengeStartFightRet) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *MsgChallengeStartFightRet) SetRetcode(value int32) {
	if m != nil {
		if m.Retcode != nil {
			*m.Retcode = value
			return
		}
		m.Retcode = proto.Int32(value)
	}
}

// 闯关模式 战果
type MsgChallengeFightResultReq struct {
	Layer            *int32 `protobuf:"varint,1,req,name=layer" json:"layer,omitempty"`
	IsSuccess        *bool  `protobuf:"varint,2,req,name=is_success" json:"is_success,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgChallengeFightResultReq) Reset()         { *m = MsgChallengeFightResultReq{} }
func (m *MsgChallengeFightResultReq) String() string { return proto.CompactTextString(m) }
func (*MsgChallengeFightResultReq) ProtoMessage()    {}

func (m *MsgChallengeFightResultReq) GetLayer() int32 {
	if m != nil && m.Layer != nil {
		return *m.Layer
	}
	return 0
}

func (m *MsgChallengeFightResultReq) GetIsSuccess() bool {
	if m != nil && m.IsSuccess != nil {
		return *m.IsSuccess
	}
	return false
}

func (m *MsgChallengeFightResultReq) SetLayer(value int32) {
	if m != nil {
		if m.Layer != nil {
			*m.Layer = value
			return
		}
		m.Layer = proto.Int32(value)
	}
}

func (m *MsgChallengeFightResultReq) SetIsSuccess(value bool) {
	if m != nil {
		if m.IsSuccess != nil {
			*m.IsSuccess = value
			return
		}
		m.IsSuccess = proto.Bool(value)
	}
}

type MsgChallengeFightResultRet struct {
	Retcode          *int32 `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	ChallengeChance  *int32 `protobuf:"varint,2,req,name=challenge_chance" json:"challenge_chance,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgChallengeFightResultRet) Reset()         { *m = MsgChallengeFightResultRet{} }
func (m *MsgChallengeFightResultRet) String() string { return proto.CompactTextString(m) }
func (*MsgChallengeFightResultRet) ProtoMessage()    {}

func (m *MsgChallengeFightResultRet) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *MsgChallengeFightResultRet) GetChallengeChance() int32 {
	if m != nil && m.ChallengeChance != nil {
		return *m.ChallengeChance
	}
	return 0
}

func (m *MsgChallengeFightResultRet) SetRetcode(value int32) {
	if m != nil {
		if m.Retcode != nil {
			*m.Retcode = value
			return
		}
		m.Retcode = proto.Int32(value)
	}
}

func (m *MsgChallengeFightResultRet) SetChallengeChance(value int32) {
	if m != nil {
		if m.ChallengeChance != nil {
			*m.ChallengeChance = value
			return
		}
		m.ChallengeChance = proto.Int32(value)
	}
}

// 闯关模式 重置
type MsgChallengeResetReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgChallengeResetReq) Reset()         { *m = MsgChallengeResetReq{} }
func (m *MsgChallengeResetReq) String() string { return proto.CompactTextString(m) }
func (*MsgChallengeResetReq) ProtoMessage()    {}

type MsgChallengeResetRet struct {
	Retcode            *int32                `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	ChallengeCount     *int32                `protobuf:"varint,2,req,name=challenge_count" json:"challenge_count,omitempty"`
	ChallengeChance    *int32                `protobuf:"varint,3,req,name=challenge_chance" json:"challenge_chance,omitempty"`
	ChallengeResetTime *int32                `protobuf:"varint,4,req,name=challenge_reset_time" json:"challenge_reset_time,omitempty"`
	Layers             []*ChallengeLayerInfo `protobuf:"bytes,5,rep,name=layers" json:"layers,omitempty"`
	XXX_unrecognized   []byte                `json:"-"`
}

func (m *MsgChallengeResetRet) Reset()         { *m = MsgChallengeResetRet{} }
func (m *MsgChallengeResetRet) String() string { return proto.CompactTextString(m) }
func (*MsgChallengeResetRet) ProtoMessage()    {}

func (m *MsgChallengeResetRet) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *MsgChallengeResetRet) GetChallengeCount() int32 {
	if m != nil && m.ChallengeCount != nil {
		return *m.ChallengeCount
	}
	return 0
}

func (m *MsgChallengeResetRet) GetChallengeChance() int32 {
	if m != nil && m.ChallengeChance != nil {
		return *m.ChallengeChance
	}
	return 0
}

func (m *MsgChallengeResetRet) GetChallengeResetTime() int32 {
	if m != nil && m.ChallengeResetTime != nil {
		return *m.ChallengeResetTime
	}
	return 0
}

func (m *MsgChallengeResetRet) GetLayers() []*ChallengeLayerInfo {
	if m != nil {
		return m.Layers
	}
	return nil
}

func (m *MsgChallengeResetRet) SetRetcode(value int32) {
	if m != nil {
		if m.Retcode != nil {
			*m.Retcode = value
			return
		}
		m.Retcode = proto.Int32(value)
	}
}

func (m *MsgChallengeResetRet) SetChallengeCount(value int32) {
	if m != nil {
		if m.ChallengeCount != nil {
			*m.ChallengeCount = value
			return
		}
		m.ChallengeCount = proto.Int32(value)
	}
}

func (m *MsgChallengeResetRet) SetChallengeChance(value int32) {
	if m != nil {
		if m.ChallengeChance != nil {
			*m.ChallengeChance = value
			return
		}
		m.ChallengeChance = proto.Int32(value)
	}
}

func (m *MsgChallengeResetRet) SetChallengeResetTime(value int32) {
	if m != nil {
		if m.ChallengeResetTime != nil {
			*m.ChallengeResetTime = value
			return
		}
		m.ChallengeResetTime = proto.Int32(value)
	}
}

func (m *MsgChallengeResetRet) SetLayers(value []*ChallengeLayerInfo) {
	if m != nil {
		m.Layers = value
	}
}

func init() {
}
