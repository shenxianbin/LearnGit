// Code generated by protoc-gen-go.
// source: soldier_cache.proto
// DO NOT EDIT!

package cache

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type SoldierCache struct {
	SchemeId         *int32          `protobuf:"varint,1,req,name=schemeId" json:"schemeId,omitempty"`
	Num              *int32          `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	Level            *int32          `protobuf:"varint,3,req,name=level" json:"level,omitempty"`
	Stage            *int32          `protobuf:"varint,4,req,name=stage" json:"stage,omitempty"`
	SkillLevel       map[int32]int32 `protobuf:"bytes,5,rep,name=skillLevel" json:"skillLevel,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SoldierCache) Reset()         { *m = SoldierCache{} }
func (m *SoldierCache) String() string { return proto.CompactTextString(m) }
func (*SoldierCache) ProtoMessage()    {}

func (m *SoldierCache) GetSchemeId() int32 {
	if m != nil && m.SchemeId != nil {
		return *m.SchemeId
	}
	return 0
}

func (m *SoldierCache) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *SoldierCache) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *SoldierCache) GetStage() int32 {
	if m != nil && m.Stage != nil {
		return *m.Stage
	}
	return 0
}

func (m *SoldierCache) GetSkillLevel() map[int32]int32 {
	if m != nil {
		return m.SkillLevel
	}
	return nil
}

func (m *SoldierCache) SetSchemeId(value int32) {
	if m != nil {
		if m.SchemeId != nil {
			*m.SchemeId = value
			return
		}
		m.SchemeId = proto.Int32(value)
	}
}

func (m *SoldierCache) SetNum(value int32) {
	if m != nil {
		if m.Num != nil {
			*m.Num = value
			return
		}
		m.Num = proto.Int32(value)
	}
}

func (m *SoldierCache) SetLevel(value int32) {
	if m != nil {
		if m.Level != nil {
			*m.Level = value
			return
		}
		m.Level = proto.Int32(value)
	}
}

func (m *SoldierCache) SetStage(value int32) {
	if m != nil {
		if m.Stage != nil {
			*m.Stage = value
			return
		}
		m.Stage = proto.Int32(value)
	}
}

func (m *SoldierCache) SetSkillLevel(value map[int32]int32) {
	if m != nil {
		m.SkillLevel = value
	}
}

func init() {
}
