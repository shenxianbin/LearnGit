// Code generated by protoc-gen-go.
// source: map_cache.proto
// DO NOT EDIT!

package cache

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type MapGrid struct {
	BaseType         *int32 `protobuf:"varint,1,req,name=base_type" json:"base_type,omitempty"`
	ObjType          *int32 `protobuf:"varint,2,req,name=obj_type" json:"obj_type,omitempty"`
	Id               *int64 `protobuf:"varint,3,req,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MapGrid) Reset()         { *m = MapGrid{} }
func (m *MapGrid) String() string { return proto.CompactTextString(m) }
func (*MapGrid) ProtoMessage()    {}

func (m *MapGrid) GetBaseType() int32 {
	if m != nil && m.BaseType != nil {
		return *m.BaseType
	}
	return 0
}

func (m *MapGrid) GetObjType() int32 {
	if m != nil && m.ObjType != nil {
		return *m.ObjType
	}
	return 0
}

func (m *MapGrid) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *MapGrid) SetBaseType(value int32) {
	if m != nil {
		if m.BaseType != nil {
			*m.BaseType = value
			return
		}
		m.BaseType = proto.Int32(value)
	}
}

func (m *MapGrid) SetObjType(value int32) {
	if m != nil {
		if m.ObjType != nil {
			*m.ObjType = value
			return
		}
		m.ObjType = proto.Int32(value)
	}
}

func (m *MapGrid) SetId(value int64) {
	if m != nil {
		if m.Id != nil {
			*m.Id = value
			return
		}
		m.Id = proto.Int64(value)
	}
}

type MapCache struct {
	XSize            *int32             `protobuf:"varint,1,req,name=x_size" json:"x_size,omitempty"`
	YSize            *int32             `protobuf:"varint,2,req,name=y_size" json:"y_size,omitempty"`
	Maps             map[int32]*MapGrid `protobuf:"bytes,3,rep,name=maps" json:"maps,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MapPointList     map[int32]int32    `protobuf:"bytes,4,rep,name=map_point_list" json:"map_point_list,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	MapPointActive   []int32            `protobuf:"varint,5,rep,name=map_point_active" json:"map_point_active,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *MapCache) Reset()         { *m = MapCache{} }
func (m *MapCache) String() string { return proto.CompactTextString(m) }
func (*MapCache) ProtoMessage()    {}

func (m *MapCache) GetXSize() int32 {
	if m != nil && m.XSize != nil {
		return *m.XSize
	}
	return 0
}

func (m *MapCache) GetYSize() int32 {
	if m != nil && m.YSize != nil {
		return *m.YSize
	}
	return 0
}

func (m *MapCache) GetMaps() map[int32]*MapGrid {
	if m != nil {
		return m.Maps
	}
	return nil
}

func (m *MapCache) GetMapPointList() map[int32]int32 {
	if m != nil {
		return m.MapPointList
	}
	return nil
}

func (m *MapCache) GetMapPointActive() []int32 {
	if m != nil {
		return m.MapPointActive
	}
	return nil
}

func (m *MapCache) SetXSize(value int32) {
	if m != nil {
		if m.XSize != nil {
			*m.XSize = value
			return
		}
		m.XSize = proto.Int32(value)
	}
}

func (m *MapCache) SetYSize(value int32) {
	if m != nil {
		if m.YSize != nil {
			*m.YSize = value
			return
		}
		m.YSize = proto.Int32(value)
	}
}

func (m *MapCache) SetMaps(value map[int32]*MapGrid) {
	if m != nil {
		m.Maps = value
	}
}

func (m *MapCache) SetMapPointList(value map[int32]int32) {
	if m != nil {
		m.MapPointList = value
	}
}

func (m *MapCache) SetMapPointActive(value []int32) {
	if m != nil {
		m.MapPointActive = value
	}
}

func init() {
}
