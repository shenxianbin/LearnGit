// Code generated by protoc-gen-go.
// source: building_cache.proto
// DO NOT EDIT!

package cache

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type BuildingCache struct {
	Uid              *int64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	SchemeId         *int32 `protobuf:"varint,2,req,name=scheme_id" json:"scheme_id,omitempty"`
	Lv               *int32 `protobuf:"varint,3,req,name=lv" json:"lv,omitempty"`
	CollectTimestamp *int64 `protobuf:"varint,4,req,name=collect_timestamp" json:"collect_timestamp,omitempty"`
	BuildTimestamp   *int64 `protobuf:"varint,5,req,name=build_timestamp" json:"build_timestamp,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BuildingCache) Reset()         { *m = BuildingCache{} }
func (m *BuildingCache) String() string { return proto.CompactTextString(m) }
func (*BuildingCache) ProtoMessage()    {}

func (m *BuildingCache) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *BuildingCache) GetSchemeId() int32 {
	if m != nil && m.SchemeId != nil {
		return *m.SchemeId
	}
	return 0
}

func (m *BuildingCache) GetLv() int32 {
	if m != nil && m.Lv != nil {
		return *m.Lv
	}
	return 0
}

func (m *BuildingCache) GetCollectTimestamp() int64 {
	if m != nil && m.CollectTimestamp != nil {
		return *m.CollectTimestamp
	}
	return 0
}

func (m *BuildingCache) GetBuildTimestamp() int64 {
	if m != nil && m.BuildTimestamp != nil {
		return *m.BuildTimestamp
	}
	return 0
}

func (m *BuildingCache) SetUid(value int64) {
	if m != nil {
		if m.Uid != nil {
			*m.Uid = value
			return
		}
		m.Uid = proto.Int64(value)
	}
}

func (m *BuildingCache) SetSchemeId(value int32) {
	if m != nil {
		if m.SchemeId != nil {
			*m.SchemeId = value
			return
		}
		m.SchemeId = proto.Int32(value)
	}
}

func (m *BuildingCache) SetLv(value int32) {
	if m != nil {
		if m.Lv != nil {
			*m.Lv = value
			return
		}
		m.Lv = proto.Int32(value)
	}
}

func (m *BuildingCache) SetCollectTimestamp(value int64) {
	if m != nil {
		if m.CollectTimestamp != nil {
			*m.CollectTimestamp = value
			return
		}
		m.CollectTimestamp = proto.Int64(value)
	}
}

func (m *BuildingCache) SetBuildTimestamp(value int64) {
	if m != nil {
		if m.BuildTimestamp != nil {
			*m.BuildTimestamp = value
			return
		}
		m.BuildTimestamp = proto.Int64(value)
	}
}

func init() {
}
