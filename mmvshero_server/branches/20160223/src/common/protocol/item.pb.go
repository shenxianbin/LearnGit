// Code generated by protoc-gen-go.
// source: item.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type ItemUserType int32

const (
	ItemUserType_NONE    ItemUserType = 0
	ItemUserType_HERO    ItemUserType = 1
	ItemUserType_SOLDIER ItemUserType = 2
)

var ItemUserType_name = map[int32]string{
	0: "NONE",
	1: "HERO",
	2: "SOLDIER",
}
var ItemUserType_value = map[string]int32{
	"NONE":    0,
	"HERO":    1,
	"SOLDIER": 2,
}

func (x ItemUserType) Enum() *ItemUserType {
	p := new(ItemUserType)
	*p = x
	return p
}
func (x ItemUserType) String() string {
	return proto.EnumName(ItemUserType_name, int32(x))
}
func (x *ItemUserType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ItemUserType_value, data, "ItemUserType")
	if err != nil {
		return err
	}
	*x = ItemUserType(value)
	return nil
}

type ItemInfo struct {
	Uid              *int64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	SchemeId         *int32 `protobuf:"varint,2,req,name=scheme_id" json:"scheme_id,omitempty"`
	Num              *int32 `protobuf:"varint,3,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ItemInfo) Reset()         { *m = ItemInfo{} }
func (m *ItemInfo) String() string { return proto.CompactTextString(m) }
func (*ItemInfo) ProtoMessage()    {}

func (m *ItemInfo) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *ItemInfo) GetSchemeId() int32 {
	if m != nil && m.SchemeId != nil {
		return *m.SchemeId
	}
	return 0
}

func (m *ItemInfo) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *ItemInfo) SetUid(value int64) {
	if m != nil {
		if m.Uid != nil {
			*m.Uid = value
			return
		}
		m.Uid = proto.Int64(value)
	}
}

func (m *ItemInfo) SetSchemeId(value int32) {
	if m != nil {
		if m.SchemeId != nil {
			*m.SchemeId = value
			return
		}
		m.SchemeId = proto.Int32(value)
	}
}

func (m *ItemInfo) SetNum(value int32) {
	if m != nil {
		if m.Num != nil {
			*m.Num = value
			return
		}
		m.Num = proto.Int32(value)
	}
}

type ItemListInfo struct {
	ItemList         []*ItemInfo `protobuf:"bytes,1,rep,name=item_list" json:"item_list,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ItemListInfo) Reset()         { *m = ItemListInfo{} }
func (m *ItemListInfo) String() string { return proto.CompactTextString(m) }
func (*ItemListInfo) ProtoMessage()    {}

func (m *ItemListInfo) GetItemList() []*ItemInfo {
	if m != nil {
		return m.ItemList
	}
	return nil
}

func (m *ItemListInfo) SetItemList(value []*ItemInfo) {
	if m != nil {
		m.ItemList = value
	}
}

// 道具数量变更
type MsgItemInfoUpdateNotify struct {
	Infos            *ItemInfo `protobuf:"bytes,1,req,name=infos" json:"infos,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *MsgItemInfoUpdateNotify) Reset()         { *m = MsgItemInfoUpdateNotify{} }
func (m *MsgItemInfoUpdateNotify) String() string { return proto.CompactTextString(m) }
func (*MsgItemInfoUpdateNotify) ProtoMessage()    {}

func (m *MsgItemInfoUpdateNotify) GetInfos() *ItemInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *MsgItemInfoUpdateNotify) SetInfos(value *ItemInfo) {
	if m != nil {
		m.Infos = value
	}
}

// 道具使用
type ItemUseInfo struct {
	Uid              *int64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	Num              *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ItemUseInfo) Reset()         { *m = ItemUseInfo{} }
func (m *ItemUseInfo) String() string { return proto.CompactTextString(m) }
func (*ItemUseInfo) ProtoMessage()    {}

func (m *ItemUseInfo) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *ItemUseInfo) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *ItemUseInfo) SetUid(value int64) {
	if m != nil {
		if m.Uid != nil {
			*m.Uid = value
			return
		}
		m.Uid = proto.Int64(value)
	}
}

func (m *ItemUseInfo) SetNum(value int32) {
	if m != nil {
		if m.Num != nil {
			*m.Num = value
			return
		}
		m.Num = proto.Int32(value)
	}
}

type MsgItemUseReq struct {
	Infos            []*ItemUseInfo `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
	UserType         *ItemUserType  `protobuf:"varint,2,req,name=user_type,enum=protocol.ItemUserType" json:"user_type,omitempty"`
	UserId           *int64         `protobuf:"varint,3,req,name=user_id" json:"user_id,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *MsgItemUseReq) Reset()         { *m = MsgItemUseReq{} }
func (m *MsgItemUseReq) String() string { return proto.CompactTextString(m) }
func (*MsgItemUseReq) ProtoMessage()    {}

func (m *MsgItemUseReq) GetInfos() []*ItemUseInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *MsgItemUseReq) GetUserType() ItemUserType {
	if m != nil && m.UserType != nil {
		return *m.UserType
	}
	return ItemUserType_NONE
}

func (m *MsgItemUseReq) GetUserId() int64 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *MsgItemUseReq) SetInfos(value []*ItemUseInfo) {
	if m != nil {
		m.Infos = value
	}
}

func (m *MsgItemUseReq) SetUserType(value ItemUserType) {
	if m != nil {
		if m.UserType != nil {
			*m.UserType = value
			return
		}
	}
}

func (m *MsgItemUseReq) SetUserId(value int64) {
	if m != nil {
		if m.UserId != nil {
			*m.UserId = value
			return
		}
		m.UserId = proto.Int64(value)
	}
}

type MsgItemUseRet struct {
	Retcode          *int32 `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgItemUseRet) Reset()         { *m = MsgItemUseRet{} }
func (m *MsgItemUseRet) String() string { return proto.CompactTextString(m) }
func (*MsgItemUseRet) ProtoMessage()    {}

func (m *MsgItemUseRet) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *MsgItemUseRet) SetRetcode(value int32) {
	if m != nil {
		if m.Retcode != nil {
			*m.Retcode = value
			return
		}
		m.Retcode = proto.Int32(value)
	}
}

func init() {
	proto.RegisterEnum("protocol.ItemUserType", ItemUserType_name, ItemUserType_value)
}
