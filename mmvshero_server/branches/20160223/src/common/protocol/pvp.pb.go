// Code generated by protoc-gen-go.
// source: pvp.proto
// DO NOT EDIT!

package protocol

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

// 打开界面
type MsgPvpQueryReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgPvpQueryReq) Reset()         { *m = MsgPvpQueryReq{} }
func (m *MsgPvpQueryReq) String() string { return proto.CompactTextString(m) }
func (*MsgPvpQueryReq) ProtoMessage()    {}

type MsgPvpQueryRet struct {
	Retcode          *int32 `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	Rank             *int32 `protobuf:"varint,2,req,name=rank" json:"rank,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgPvpQueryRet) Reset()         { *m = MsgPvpQueryRet{} }
func (m *MsgPvpQueryRet) String() string { return proto.CompactTextString(m) }
func (*MsgPvpQueryRet) ProtoMessage()    {}

func (m *MsgPvpQueryRet) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *MsgPvpQueryRet) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *MsgPvpQueryRet) SetRetcode(value int32) {
	if m != nil {
		if m.Retcode != nil {
			*m.Retcode = value
			return
		}
		m.Retcode = proto.Int32(value)
	}
}

func (m *MsgPvpQueryRet) SetRank(value int32) {
	if m != nil {
		if m.Rank != nil {
			*m.Rank = value
			return
		}
		m.Rank = proto.Int32(value)
	}
}

// 排行榜
type PvpRankInfo struct {
	Rank             *int32  `protobuf:"varint,1,req,name=rank" json:"rank,omitempty"`
	RoleUid          *int64  `protobuf:"varint,2,req,name=role_uid" json:"role_uid,omitempty"`
	Name             *string `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	LeagueLv         *int32  `protobuf:"varint,4,req,name=league_lv" json:"league_lv,omitempty"`
	Trophy           *int32  `protobuf:"varint,5,req,name=trophy" json:"trophy,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PvpRankInfo) Reset()         { *m = PvpRankInfo{} }
func (m *PvpRankInfo) String() string { return proto.CompactTextString(m) }
func (*PvpRankInfo) ProtoMessage()    {}

func (m *PvpRankInfo) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *PvpRankInfo) GetRoleUid() int64 {
	if m != nil && m.RoleUid != nil {
		return *m.RoleUid
	}
	return 0
}

func (m *PvpRankInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PvpRankInfo) GetLeagueLv() int32 {
	if m != nil && m.LeagueLv != nil {
		return *m.LeagueLv
	}
	return 0
}

func (m *PvpRankInfo) GetTrophy() int32 {
	if m != nil && m.Trophy != nil {
		return *m.Trophy
	}
	return 0
}

func (m *PvpRankInfo) SetRank(value int32) {
	if m != nil {
		if m.Rank != nil {
			*m.Rank = value
			return
		}
		m.Rank = proto.Int32(value)
	}
}

func (m *PvpRankInfo) SetRoleUid(value int64) {
	if m != nil {
		if m.RoleUid != nil {
			*m.RoleUid = value
			return
		}
		m.RoleUid = proto.Int64(value)
	}
}

func (m *PvpRankInfo) SetName(value string) {
	if m != nil {
		if m.Name != nil {
			*m.Name = value
			return
		}
		m.Name = proto.String(value)
	}
}

func (m *PvpRankInfo) SetLeagueLv(value int32) {
	if m != nil {
		if m.LeagueLv != nil {
			*m.LeagueLv = value
			return
		}
		m.LeagueLv = proto.Int32(value)
	}
}

func (m *PvpRankInfo) SetTrophy(value int32) {
	if m != nil {
		if m.Trophy != nil {
			*m.Trophy = value
			return
		}
		m.Trophy = proto.Int32(value)
	}
}

type MsgPvpRankInfoReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgPvpRankInfoReq) Reset()         { *m = MsgPvpRankInfoReq{} }
func (m *MsgPvpRankInfoReq) String() string { return proto.CompactTextString(m) }
func (*MsgPvpRankInfoReq) ProtoMessage()    {}

type MsgPvpRankInfoRet struct {
	Retcode          *int32         `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	Rank             *int32         `protobuf:"varint,2,req,name=rank" json:"rank,omitempty"`
	MyRank           []*PvpRankInfo `protobuf:"bytes,3,rep,name=my_rank" json:"my_rank,omitempty"`
	TopRank          []*PvpRankInfo `protobuf:"bytes,4,rep,name=top_rank" json:"top_rank,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *MsgPvpRankInfoRet) Reset()         { *m = MsgPvpRankInfoRet{} }
func (m *MsgPvpRankInfoRet) String() string { return proto.CompactTextString(m) }
func (*MsgPvpRankInfoRet) ProtoMessage()    {}

func (m *MsgPvpRankInfoRet) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *MsgPvpRankInfoRet) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *MsgPvpRankInfoRet) GetMyRank() []*PvpRankInfo {
	if m != nil {
		return m.MyRank
	}
	return nil
}

func (m *MsgPvpRankInfoRet) GetTopRank() []*PvpRankInfo {
	if m != nil {
		return m.TopRank
	}
	return nil
}

func (m *MsgPvpRankInfoRet) SetRetcode(value int32) {
	if m != nil {
		if m.Retcode != nil {
			*m.Retcode = value
			return
		}
		m.Retcode = proto.Int32(value)
	}
}

func (m *MsgPvpRankInfoRet) SetRank(value int32) {
	if m != nil {
		if m.Rank != nil {
			*m.Rank = value
			return
		}
		m.Rank = proto.Int32(value)
	}
}

func (m *MsgPvpRankInfoRet) SetMyRank(value []*PvpRankInfo) {
	if m != nil {
		m.MyRank = value
	}
}

func (m *MsgPvpRankInfoRet) SetTopRank(value []*PvpRankInfo) {
	if m != nil {
		m.TopRank = value
	}
}

// 出战
type MsgPvpPrepareReq struct {
	FightHeroList    []int64 `protobuf:"varint,1,rep,name=fight_hero_list" json:"fight_hero_list,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MsgPvpPrepareReq) Reset()         { *m = MsgPvpPrepareReq{} }
func (m *MsgPvpPrepareReq) String() string { return proto.CompactTextString(m) }
func (*MsgPvpPrepareReq) ProtoMessage()    {}

func (m *MsgPvpPrepareReq) GetFightHeroList() []int64 {
	if m != nil {
		return m.FightHeroList
	}
	return nil
}

func (m *MsgPvpPrepareReq) SetFightHeroList(value []int64) {
	if m != nil {
		m.FightHeroList = value
	}
}

type MsgPvpPrepareRet struct {
	Retcode          *int32 `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgPvpPrepareRet) Reset()         { *m = MsgPvpPrepareRet{} }
func (m *MsgPvpPrepareRet) String() string { return proto.CompactTextString(m) }
func (*MsgPvpPrepareRet) ProtoMessage()    {}

func (m *MsgPvpPrepareRet) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *MsgPvpPrepareRet) SetRetcode(value int32) {
	if m != nil {
		if m.Retcode != nil {
			*m.Retcode = value
			return
		}
		m.Retcode = proto.Int32(value)
	}
}

// 搜索对手 更换对手
type MsgPvpMatchReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgPvpMatchReq) Reset()         { *m = MsgPvpMatchReq{} }
func (m *MsgPvpMatchReq) String() string { return proto.CompactTextString(m) }
func (*MsgPvpMatchReq) ProtoMessage()    {}

// 指定对手战斗
type MsgPvpMatchIdReq struct {
	Uid              *int64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgPvpMatchIdReq) Reset()         { *m = MsgPvpMatchIdReq{} }
func (m *MsgPvpMatchIdReq) String() string { return proto.CompactTextString(m) }
func (*MsgPvpMatchIdReq) ProtoMessage()    {}

func (m *MsgPvpMatchIdReq) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *MsgPvpMatchIdReq) SetUid(value int64) {
	if m != nil {
		if m.Uid != nil {
			*m.Uid = value
			return
		}
		m.Uid = proto.Int64(value)
	}
}

type MsgPvpMatchRet struct {
	Retcode          *int32        `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	Info             *PvpFightInfo `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *MsgPvpMatchRet) Reset()         { *m = MsgPvpMatchRet{} }
func (m *MsgPvpMatchRet) String() string { return proto.CompactTextString(m) }
func (*MsgPvpMatchRet) ProtoMessage()    {}

func (m *MsgPvpMatchRet) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *MsgPvpMatchRet) GetInfo() *PvpFightInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *MsgPvpMatchRet) SetRetcode(value int32) {
	if m != nil {
		if m.Retcode != nil {
			*m.Retcode = value
			return
		}
		m.Retcode = proto.Int32(value)
	}
}

func (m *MsgPvpMatchRet) SetInfo(value *PvpFightInfo) {
	if m != nil {
		m.Info = value
	}
}

// 开始战斗
type MsgPvpStartReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgPvpStartReq) Reset()         { *m = MsgPvpStartReq{} }
func (m *MsgPvpStartReq) String() string { return proto.CompactTextString(m) }
func (*MsgPvpStartReq) ProtoMessage()    {}

type MsgPvpStartRet struct {
	Retcode          *int32 `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgPvpStartRet) Reset()         { *m = MsgPvpStartRet{} }
func (m *MsgPvpStartRet) String() string { return proto.CompactTextString(m) }
func (*MsgPvpStartRet) ProtoMessage()    {}

func (m *MsgPvpStartRet) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *MsgPvpStartRet) SetRetcode(value int32) {
	if m != nil {
		if m.Retcode != nil {
			*m.Retcode = value
			return
		}
		m.Retcode = proto.Int32(value)
	}
}

// 结束战斗（放弃）
type MsgPvpGiveUpReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgPvpGiveUpReq) Reset()         { *m = MsgPvpGiveUpReq{} }
func (m *MsgPvpGiveUpReq) String() string { return proto.CompactTextString(m) }
func (*MsgPvpGiveUpReq) ProtoMessage()    {}

type MsgPvpGiveUpRet struct {
	Retcode          *int32 `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	Trophy           *int32 `protobuf:"varint,2,req,name=trophy" json:"trophy,omitempty"`
	Stone            *int32 `protobuf:"varint,3,req,name=stone" json:"stone,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgPvpGiveUpRet) Reset()         { *m = MsgPvpGiveUpRet{} }
func (m *MsgPvpGiveUpRet) String() string { return proto.CompactTextString(m) }
func (*MsgPvpGiveUpRet) ProtoMessage()    {}

func (m *MsgPvpGiveUpRet) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *MsgPvpGiveUpRet) GetTrophy() int32 {
	if m != nil && m.Trophy != nil {
		return *m.Trophy
	}
	return 0
}

func (m *MsgPvpGiveUpRet) GetStone() int32 {
	if m != nil && m.Stone != nil {
		return *m.Stone
	}
	return 0
}

func (m *MsgPvpGiveUpRet) SetRetcode(value int32) {
	if m != nil {
		if m.Retcode != nil {
			*m.Retcode = value
			return
		}
		m.Retcode = proto.Int32(value)
	}
}

func (m *MsgPvpGiveUpRet) SetTrophy(value int32) {
	if m != nil {
		if m.Trophy != nil {
			*m.Trophy = value
			return
		}
		m.Trophy = proto.Int32(value)
	}
}

func (m *MsgPvpGiveUpRet) SetStone(value int32) {
	if m != nil {
		if m.Stone != nil {
			*m.Stone = value
			return
		}
		m.Stone = proto.Int32(value)
	}
}

// 结束战斗（完成）
type MsgPvpFinishReq struct {
	IsWin            *bool  `protobuf:"varint,1,req,name=isWin" json:"isWin,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgPvpFinishReq) Reset()         { *m = MsgPvpFinishReq{} }
func (m *MsgPvpFinishReq) String() string { return proto.CompactTextString(m) }
func (*MsgPvpFinishReq) ProtoMessage()    {}

func (m *MsgPvpFinishReq) GetIsWin() bool {
	if m != nil && m.IsWin != nil {
		return *m.IsWin
	}
	return false
}

func (m *MsgPvpFinishReq) SetIsWin(value bool) {
	if m != nil {
		if m.IsWin != nil {
			*m.IsWin = value
			return
		}
		m.IsWin = proto.Bool(value)
	}
}

type MsgPvpFinishRet struct {
	Retcode          *int32 `protobuf:"varint,1,req,name=retcode" json:"retcode,omitempty"`
	Trophy           *int32 `protobuf:"varint,2,req,name=trophy" json:"trophy,omitempty"`
	Stone            *int32 `protobuf:"varint,3,req,name=stone" json:"stone,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *MsgPvpFinishRet) Reset()         { *m = MsgPvpFinishRet{} }
func (m *MsgPvpFinishRet) String() string { return proto.CompactTextString(m) }
func (*MsgPvpFinishRet) ProtoMessage()    {}

func (m *MsgPvpFinishRet) GetRetcode() int32 {
	if m != nil && m.Retcode != nil {
		return *m.Retcode
	}
	return 0
}

func (m *MsgPvpFinishRet) GetTrophy() int32 {
	if m != nil && m.Trophy != nil {
		return *m.Trophy
	}
	return 0
}

func (m *MsgPvpFinishRet) GetStone() int32 {
	if m != nil && m.Stone != nil {
		return *m.Stone
	}
	return 0
}

func (m *MsgPvpFinishRet) SetRetcode(value int32) {
	if m != nil {
		if m.Retcode != nil {
			*m.Retcode = value
			return
		}
		m.Retcode = proto.Int32(value)
	}
}

func (m *MsgPvpFinishRet) SetTrophy(value int32) {
	if m != nil {
		if m.Trophy != nil {
			*m.Trophy = value
			return
		}
		m.Trophy = proto.Int32(value)
	}
}

func (m *MsgPvpFinishRet) SetStone(value int32) {
	if m != nil {
		if m.Stone != nil {
			*m.Stone = value
			return
		}
		m.Stone = proto.Int32(value)
	}
}

type WarSoliders struct {
	Soldiers         []*WarSolider `protobuf:"bytes,1,rep,name=soldiers" json:"soldiers,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *WarSoliders) Reset()         { *m = WarSoliders{} }
func (m *WarSoliders) String() string { return proto.CompactTextString(m) }
func (*WarSoliders) ProtoMessage()    {}

func (m *WarSoliders) GetSoldiers() []*WarSolider {
	if m != nil {
		return m.Soldiers
	}
	return nil
}

func (m *WarSoliders) SetSoldiers(value []*WarSolider) {
	if m != nil {
		m.Soldiers = value
	}
}

type WarSolider struct {
	SchemeId         *int32 `protobuf:"varint,1,req,name=schemeId" json:"schemeId,omitempty"`
	Num              *int32 `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *WarSolider) Reset()         { *m = WarSolider{} }
func (m *WarSolider) String() string { return proto.CompactTextString(m) }
func (*WarSolider) ProtoMessage()    {}

func (m *WarSolider) GetSchemeId() int32 {
	if m != nil && m.SchemeId != nil {
		return *m.SchemeId
	}
	return 0
}

func (m *WarSolider) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *WarSolider) SetSchemeId(value int32) {
	if m != nil {
		if m.SchemeId != nil {
			*m.SchemeId = value
			return
		}
		m.SchemeId = proto.Int32(value)
	}
}

func (m *WarSolider) SetNum(value int32) {
	if m != nil {
		if m.Num != nil {
			*m.Num = value
			return
		}
		m.Num = proto.Int32(value)
	}
}

type WarHeroes struct {
	Heroes           []*WarHero `protobuf:"bytes,1,rep,name=heroes" json:"heroes,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *WarHeroes) Reset()         { *m = WarHeroes{} }
func (m *WarHeroes) String() string { return proto.CompactTextString(m) }
func (*WarHeroes) ProtoMessage()    {}

func (m *WarHeroes) GetHeroes() []*WarHero {
	if m != nil {
		return m.Heroes
	}
	return nil
}

func (m *WarHeroes) SetHeroes(value []*WarHero) {
	if m != nil {
		m.Heroes = value
	}
}

type WarHero struct {
	Uid              *int64 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *WarHero) Reset()         { *m = WarHero{} }
func (m *WarHero) String() string { return proto.CompactTextString(m) }
func (*WarHero) ProtoMessage()    {}

func (m *WarHero) GetUid() int64 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *WarHero) SetUid(value int64) {
	if m != nil {
		if m.Uid != nil {
			*m.Uid = value
			return
		}
		m.Uid = proto.Int64(value)
	}
}

type CampInfo struct {
	Soliders         []byte `protobuf:"bytes,1,opt,name=soliders" json:"soliders,omitempty"`
	Heroes           []byte `protobuf:"bytes,2,opt,name=heroes" json:"heroes,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CampInfo) Reset()         { *m = CampInfo{} }
func (m *CampInfo) String() string { return proto.CompactTextString(m) }
func (*CampInfo) ProtoMessage()    {}

func (m *CampInfo) GetSoliders() []byte {
	if m != nil {
		return m.Soliders
	}
	return nil
}

func (m *CampInfo) GetHeroes() []byte {
	if m != nil {
		return m.Heroes
	}
	return nil
}

func (m *CampInfo) SetSoliders(value []byte) {
	if m != nil {
		if m.Soliders != nil {
			m.Soliders = value
			return
		}
		m.Soliders = value
	}
}

func (m *CampInfo) SetHeroes(value []byte) {
	if m != nil {
		if m.Heroes != nil {
			m.Heroes = value
			return
		}
		m.Heroes = value
	}
}

func init() {
}
